<html>

<head>
  <meta charset="utf-8" />
  <title>node/lib/path.js</title>

  <!--link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/shahbazprism.css">
  <link rel="stylesheet" href="/css/custom.css"-->
  <link rel="stylesheet" href="/assets/multicolumn2/atom-light.css">
  <style>
      body {
        font-family: Menlo,Monaco,Consolas,"Courier New",monospace;
        font-size: 11px;
      }

      @media all and (min-width: 1000px) {
      .editor-colors {
        -webkit-column-width: 520px;
        -moz-column-width: 520px;
        column-width: 520px;

        -moz-column-rule: 1px dotted #ccc;
        -webkit-column-rule: 1px dotted #ccc;
        column-rule: 1px dotted #ccc;

      }

      .editor-colors {
        height:100%;
      }
    }
  </style>

</head>


<body>

<div class="editor editor-colors">
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Copyright&nbsp;Joyent,&nbsp;Inc.&nbsp;and&nbsp;other&nbsp;Node&nbsp;contributors.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Permission&nbsp;is&nbsp;hereby&nbsp;granted,&nbsp;free&nbsp;of&nbsp;charge,&nbsp;to&nbsp;any&nbsp;person&nbsp;obtaining&nbsp;a</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;copy&nbsp;of&nbsp;this&nbsp;software&nbsp;and&nbsp;associated&nbsp;documentation&nbsp;files&nbsp;(the</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;&quot;Software&quot;),&nbsp;to&nbsp;deal&nbsp;in&nbsp;the&nbsp;Software&nbsp;without&nbsp;restriction,&nbsp;including</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;without&nbsp;limitation&nbsp;the&nbsp;rights&nbsp;to&nbsp;use,&nbsp;copy,&nbsp;modify,&nbsp;merge,&nbsp;publish,</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;distribute,&nbsp;sublicense,&nbsp;and/or&nbsp;sell&nbsp;copies&nbsp;of&nbsp;the&nbsp;Software,&nbsp;and&nbsp;to&nbsp;permit</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;persons&nbsp;to&nbsp;whom&nbsp;the&nbsp;Software&nbsp;is&nbsp;furnished&nbsp;to&nbsp;do&nbsp;so,&nbsp;subject&nbsp;to&nbsp;the</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;following&nbsp;conditions:</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;The&nbsp;above&nbsp;copyright&nbsp;notice&nbsp;and&nbsp;this&nbsp;permission&nbsp;notice&nbsp;shall&nbsp;be&nbsp;included</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;in&nbsp;all&nbsp;copies&nbsp;or&nbsp;substantial&nbsp;portions&nbsp;of&nbsp;the&nbsp;Software.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;THE&nbsp;SOFTWARE&nbsp;IS&nbsp;PROVIDED&nbsp;&quot;AS&nbsp;IS&quot;,&nbsp;WITHOUT&nbsp;WARRANTY&nbsp;OF&nbsp;ANY&nbsp;KIND,&nbsp;EXPRESS</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;OR&nbsp;IMPLIED,&nbsp;INCLUDING&nbsp;BUT&nbsp;NOT&nbsp;LIMITED&nbsp;TO&nbsp;THE&nbsp;WARRANTIES&nbsp;OF</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;MERCHANTABILITY,&nbsp;FITNESS&nbsp;FOR&nbsp;A&nbsp;PARTICULAR&nbsp;PURPOSE&nbsp;AND&nbsp;NONINFRINGEMENT.&nbsp;IN</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;NO&nbsp;EVENT&nbsp;SHALL&nbsp;THE&nbsp;AUTHORS&nbsp;OR&nbsp;COPYRIGHT&nbsp;HOLDERS&nbsp;BE&nbsp;LIABLE&nbsp;FOR&nbsp;ANY&nbsp;CLAIM,</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;DAMAGES&nbsp;OR&nbsp;OTHER&nbsp;LIABILITY,&nbsp;WHETHER&nbsp;IN&nbsp;AN&nbsp;ACTION&nbsp;OF&nbsp;CONTRACT,&nbsp;TORT&nbsp;OR</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;OTHERWISE,&nbsp;ARISING&nbsp;FROM,&nbsp;OUT&nbsp;OF&nbsp;OR&nbsp;IN&nbsp;CONNECTION&nbsp;WITH&nbsp;THE&nbsp;SOFTWARE&nbsp;OR&nbsp;THE</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;USE&nbsp;OR&nbsp;OTHER&nbsp;DEALINGS&nbsp;IN&nbsp;THE&nbsp;SOFTWARE.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>use&nbsp;strict</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="storage modifier js"><span>var</span></span><span>&nbsp;isWindows&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="support variable js"><span>process</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>platform</span></span><span>&nbsp;</span><span class="keyword operator js"><span>===</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>win32</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="storage modifier js"><span>var</span></span><span>&nbsp;util&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="support function js"><span>require</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>util</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;resolves&nbsp;.&nbsp;and&nbsp;..&nbsp;elements&nbsp;in&nbsp;a&nbsp;path&nbsp;array&nbsp;with&nbsp;directory&nbsp;names&nbsp;there</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;must&nbsp;be&nbsp;no&nbsp;slashes&nbsp;or&nbsp;device&nbsp;names&nbsp;(c:\)&nbsp;in&nbsp;the&nbsp;array</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;(so&nbsp;also&nbsp;no&nbsp;leading&nbsp;and&nbsp;trailing&nbsp;slashes&nbsp;-&nbsp;it&nbsp;does&nbsp;not&nbsp;distinguish</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;relative&nbsp;and&nbsp;absolute&nbsp;paths)</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span>&nbsp;</span><span class="entity name function js"><span>normalizeArray</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>parts</span></span><span>,&nbsp;</span><span class="variable parameter function js"><span>allowAboveRoot</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;res&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="meta brace square js"><span>[</span><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>for</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="storage modifier js"><span>var</span></span><span>&nbsp;i&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="constant numeric js"><span>0</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;i&nbsp;</span><span class="keyword operator js"><span>&lt;</span></span><span>&nbsp;parts</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;i</span><span class="keyword operator js"><span>++</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;p&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;parts</span><span class="meta brace square js"><span>[</span></span><span>i</span><span class="meta brace square js"><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;ignore&nbsp;empty&nbsp;parts</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>p&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;p&nbsp;</span><span class="keyword operator js"><span>===</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>.</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>continue</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>p&nbsp;</span><span class="keyword operator js"><span>===</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>..</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>res</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span>&nbsp;</span><span class="keyword operator js"><span>&amp;</span><span>&amp;</span></span><span>&nbsp;res</span><span class="meta brace square js"><span>[</span></span><span>res</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span>&nbsp;</span><span class="keyword operator js"><span>-</span></span><span>&nbsp;</span><span class="constant numeric js"><span>1</span></span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span><span>==</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>..</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;res</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>pop</span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span><span>&nbsp;</span><span class="keyword control js"><span>else</span></span><span>&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>allowAboveRoot</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;res</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>push</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>..</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span><span>&nbsp;</span><span class="keyword control js"><span>else</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;res</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>push</span></span><span class="meta brace round js"><span>(</span></span><span>p</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;res</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Regex&nbsp;to&nbsp;split&nbsp;a&nbsp;windows&nbsp;path&nbsp;into&nbsp;three&nbsp;parts:&nbsp;[*,&nbsp;device,&nbsp;slash,</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;tail]&nbsp;windows-only</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="storage modifier js"><span>var</span></span><span>&nbsp;splitDeviceRe&nbsp;</span><span class="keyword operator js"><span>=</span></span></span></div>
  <div class="line"><span class="source js"><span class="string regexp js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string begin js"><span>/</span></span><span class="keyword control anchor regexp"><span>^</span></span><span class="meta group regexp"><span class="punctuation definition group regexp"><span>(</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="constant other character-class range regexp"><span>a-z</span><span>A-Z</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span>:</span><span class="keyword operator or regexp"><span>
  </span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="constant character escape backslash regexp"><span>\\</span><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>{2}</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="keyword operator negation regexp"><span>^</span></span><span class="constant character escape backslash regexp"><span>\\</span><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>+</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="constant character escape backslash regexp"><span>\\</span><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>+</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="keyword operator negation regexp"><span>^</span></span><span class="constant character escape backslash regexp"><span>\\</span><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>+</span></span><span class="punctuation definition group regexp"><span>)</span></span></span><span class="keyword operator quantifier regexp"><span>?</span></span><span class="meta group regexp"><span class="punctuation definition group regexp"><span>(</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="constant character escape backslash regexp"><span>\\</span><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="punctuation definition group regexp"><span>)</span></span></span><span class="keyword operator quantifier regexp"><span>?</span></span><span class="meta group regexp"><span class="punctuation definition group regexp"><span>(</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="constant character character-class regexp"><span>\s</span><span>\S</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>*</span><span>?</span></span><span class="punctuation definition group regexp"><span>)</span></span></span><span class="keyword control anchor regexp"><span>$</span></span><span class="punctuation definition string end js"><span>/</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Regex&nbsp;to&nbsp;split&nbsp;the&nbsp;tail&nbsp;part&nbsp;of&nbsp;the&nbsp;above&nbsp;into&nbsp;[*,&nbsp;dir,&nbsp;basename,&nbsp;ext]</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="storage modifier js"><span>var</span></span><span>&nbsp;splitTailRe&nbsp;</span><span class="keyword operator js"><span>=</span></span></span></div>
  <div class="line"><span class="source js"><span class="string regexp js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string begin js"><span>/</span></span><span class="keyword control anchor regexp"><span>^</span></span><span class="meta group regexp"><span class="punctuation definition group regexp"><span>(</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="constant character character-class regexp"><span>\s</span><span>\S</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>*</span><span>?</span></span><span class="punctuation definition group regexp"><span>)</span><span>(</span></span><span class="meta group regexp"><span class="punctuation definition group regexp"><span>(?:</span></span><span class="constant character escape backslash regexp"><span>\.</span></span><span class="keyword operator quantifier regexp"><span>{1,2}</span></span><span class="keyword operator or regexp"><span>
  </span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="keyword operator negation regexp"><span>^</span></span><span class="constant character escape backslash regexp"><span>\\</span><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>+</span><span>?</span></span><span class="keyword operator or regexp"><span>
  </span></span><span class="punctuation definition group regexp"><span>)</span><span>(</span></span><span class="constant character escape backslash regexp"><span>\.</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="keyword operator negation regexp"><span>^</span></span><span class="constant character character-class regexp"><span>.</span></span><span class="constant character escape backslash regexp"><span>\/</span><span>\\</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>*</span></span><span class="keyword operator or regexp"><span>
  </span></span><span class="punctuation definition group regexp"><span>)</span></span></span><span class="punctuation definition group regexp"><span>)</span><span>(?:</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="constant character escape backslash regexp"><span>\\</span><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>*</span></span><span class="punctuation definition group regexp"><span>)</span></span></span><span class="keyword control anchor regexp"><span>$</span></span><span class="punctuation definition string end js"><span>/</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="storage modifier js"><span>var</span></span><span>&nbsp;win32&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Function&nbsp;to&nbsp;split&nbsp;a&nbsp;filename&nbsp;into&nbsp;[root,&nbsp;dir,&nbsp;basename,&nbsp;ext]</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span>&nbsp;</span><span class="entity name function js"><span>win32SplitPath</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>filename</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Separate&nbsp;device+slash&nbsp;from&nbsp;tail</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;result&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;splitDeviceRe</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>exec</span></span><span class="meta brace round js"><span>(</span></span><span>filename</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;device&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>result</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>result</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>2</span></span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tail&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;result</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>3</span></span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Split&nbsp;the&nbsp;tail&nbsp;into&nbsp;dir,&nbsp;basename&nbsp;and&nbsp;extension</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;result2&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;splitTailRe</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>exec</span></span><span class="meta brace round js"><span>(</span></span><span>tail</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dir&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;result2</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;basename&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;result2</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>2</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ext&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;result2</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>3</span></span><span class="meta brace square js"><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="meta brace square js"><span>[</span></span><span>device</span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;dir</span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;basename</span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;ext</span><span class="meta brace square js"><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="storage modifier js"><span>var</span></span><span>&nbsp;</span><span class="meta function js"><span class="entity name function js"><span>normalizeUNCRoot</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>device</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;device</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>replace</span></span><span class="meta brace round js"><span>(</span></span><span class="string regexp js"><span class="punctuation definition string begin js"><span>/</span></span><span class="keyword control anchor regexp"><span>^</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="constant character escape backslash regexp"><span>\\</span><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>+</span></span><span class="punctuation definition string end js"><span>/</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>replace</span></span><span class="meta brace round js"><span>(</span></span><span class="string regexp js"><span class="punctuation definition string begin js"><span>/</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="constant character escape backslash regexp"><span>\\</span><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>+</span></span><span class="punctuation definition string end js"><span>/</span></span><span>g</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;path.resolve([from&nbsp;...],&nbsp;to)</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>win32</span></span><span>.</span><span class="entity name function js"><span>resolve</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;resolvedDevice&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolvedTail&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolvedAbsolute&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="constant language boolean false js"><span>false</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>for</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="storage modifier js"><span>var</span></span><span>&nbsp;i&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;arguments</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span>&nbsp;</span><span class="keyword operator js"><span>-</span></span><span>&nbsp;</span><span class="constant numeric js"><span>1</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;i&nbsp;</span><span class="keyword operator js"><span>&gt;=</span></span><span>&nbsp;</span><span class="keyword operator js"><span>-</span></span><span class="constant numeric js"><span>1</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;i</span><span class="keyword operator js"><span>--</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;path</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>i&nbsp;</span><span class="keyword operator js"><span>&gt;=</span></span><span>&nbsp;</span><span class="constant numeric js"><span>0</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;arguments</span><span class="meta brace square js"><span>[</span></span><span>i</span><span class="meta brace square js"><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span><span>&nbsp;</span><span class="keyword control js"><span>else</span></span><span>&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>resolvedDevice</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="support variable js"><span>process</span></span><span class="meta delimiter method period js"><span>.</span></span><span>cwd</span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span><span>&nbsp;</span><span class="keyword control js"><span>else</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Windows&nbsp;has&nbsp;the&nbsp;concept&nbsp;of&nbsp;drive-specific&nbsp;current&nbsp;working</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;directories.&nbsp;If&nbsp;we&#39;ve&nbsp;resolved&nbsp;a&nbsp;drive&nbsp;letter&nbsp;but&nbsp;not&nbsp;yet&nbsp;an</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;absolute&nbsp;path,&nbsp;get&nbsp;cwd&nbsp;for&nbsp;that&nbsp;drive.&nbsp;We&#39;re&nbsp;sure&nbsp;the&nbsp;device&nbsp;is&nbsp;not</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;an&nbsp;unc&nbsp;path&nbsp;at&nbsp;this&nbsp;points,&nbsp;because&nbsp;unc&nbsp;paths&nbsp;are&nbsp;always&nbsp;absolute.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="support variable js"><span>process</span></span><span class="meta delimiter method period js"><span>.</span></span><span>env</span><span class="meta brace square js"><span>[</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>=</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;resolvedDevice</span><span class="meta brace square js"><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Verify&nbsp;that&nbsp;a&nbsp;drive-local&nbsp;cwd&nbsp;was&nbsp;found&nbsp;and&nbsp;that&nbsp;it&nbsp;actually&nbsp;points</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;to&nbsp;our&nbsp;drive.&nbsp;If&nbsp;not,&nbsp;default&nbsp;to&nbsp;the&nbsp;drive&#39;s&nbsp;root.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>path&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;path</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>substr</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>0</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="constant numeric js"><span>3</span></span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>toLowerCase</span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span><span>==</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolvedDevice</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>toLowerCase</span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;resolvedDevice&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Skip&nbsp;empty&nbsp;and&nbsp;invalid&nbsp;entries</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>util</span><span class="meta delimiter method period js"><span>.</span></span><span>isString</span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta brace round js"><span>)</span><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>throw</span></span><span>&nbsp;</span><span class="meta class instance constructor"><span class="keyword operator new js"><span>new</span></span><span>&nbsp;</span><span class="entity name type instance js"><span>TypeError</span></span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>Arguments&nbsp;to&nbsp;path.resolve&nbsp;must&nbsp;be&nbsp;strings</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span><span>&nbsp;</span><span class="keyword control js"><span>else</span></span><span>&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>continue</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;result&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;splitDeviceRe</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>exec</span></span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;device&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;result</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isUnc&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;device&nbsp;</span><span class="keyword operator js"><span>&amp;</span><span>&amp;</span></span><span>&nbsp;device</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>charAt</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span><span>==</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>:</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isAbsolute&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;win32</span><span class="meta delimiter method period js"><span>.</span></span><span>isAbsolute</span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tail&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;result</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>3</span></span><span class="meta brace square js"><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>device&nbsp;</span><span class="keyword operator js"><span>&amp;</span><span>&amp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolvedDevice&nbsp;</span><span class="keyword operator js"><span>&amp;</span><span>&amp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;device</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>toLowerCase</span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span><span>==</span></span><span>&nbsp;resolvedDevice</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>toLowerCase</span></span><span class="meta brace round js"><span>(</span><span>)</span><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;This&nbsp;path&nbsp;points&nbsp;to&nbsp;another&nbsp;device&nbsp;so&nbsp;it&nbsp;is&nbsp;not&nbsp;applicable</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>continue</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>resolvedDevice</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolvedDevice&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;device</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>resolvedAbsolute</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolvedTail&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;tail&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;resolvedTail</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolvedAbsolute&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;isAbsolute</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>resolvedDevice&nbsp;</span><span class="keyword operator js"><span>&amp;</span><span>&amp;</span></span><span>&nbsp;resolvedAbsolute</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>break</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Convert&nbsp;slashes&nbsp;to&nbsp;backslashes&nbsp;when&nbsp;`resolvedDevice`&nbsp;points&nbsp;to&nbsp;an&nbsp;UNC</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;root.&nbsp;Also&nbsp;squash&nbsp;multiple&nbsp;slashes&nbsp;into&nbsp;a&nbsp;single&nbsp;one&nbsp;where&nbsp;appropriate.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>isUnc</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;resolvedDevice&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;normalizeUNCRoot</span><span class="meta brace round js"><span>(</span></span><span>resolvedDevice</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;At&nbsp;this&nbsp;point&nbsp;the&nbsp;path&nbsp;should&nbsp;be&nbsp;resolved&nbsp;to&nbsp;a&nbsp;full&nbsp;absolute&nbsp;path,</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;but&nbsp;handle&nbsp;relative&nbsp;paths&nbsp;to&nbsp;be&nbsp;safe&nbsp;(might&nbsp;happen&nbsp;when&nbsp;process.cwd()</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;fails)</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Normalize&nbsp;the&nbsp;tail&nbsp;path</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;resolvedTail&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;normalizeArray</span><span class="meta brace round js"><span>(</span></span><span>resolvedTail</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>split</span></span><span class="meta brace round js"><span>(</span></span><span class="string regexp js"><span class="punctuation definition string begin js"><span>/</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="constant character escape backslash regexp"><span>\\</span><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>+</span></span><span class="punctuation definition string end js"><span>/</span></span></span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword operator js"><span>!</span></span><span>resolvedAbsolute</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>join</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>resolvedDevice&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>resolvedAbsolute&nbsp;</span><span class="keyword operator js"><span>?</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;resolvedTail</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>

  </span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>.</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>win32</span></span><span>.</span><span class="entity name function js"><span>normalize</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>path</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;result&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;splitDeviceRe</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>exec</span></span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;device&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;result</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isUnc&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;device&nbsp;</span><span class="keyword operator js"><span>&amp;</span><span>&amp;</span></span><span>&nbsp;device</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>charAt</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span><span>==</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>:</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isAbsolute&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;win32</span><span class="meta delimiter method period js"><span>.</span></span><span>isAbsolute</span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tail&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;result</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>3</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;trailingSlash&nbsp;</span><span class="keyword operator js"><span>=</span></span><span class="string regexp js"><span>&nbsp;</span><span class="punctuation definition string begin js"><span>/</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="constant character escape backslash regexp"><span>\\</span><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword control anchor regexp"><span>$</span></span><span class="punctuation definition string end js"><span>/</span></span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>test</span></span><span class="meta brace round js"><span>(</span></span><span>tail</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Normalize&nbsp;the&nbsp;tail&nbsp;path</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;tail&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;normalizeArray</span><span class="meta brace round js"><span>(</span></span><span>tail</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>split</span></span><span class="meta brace round js"><span>(</span></span><span class="string regexp js"><span class="punctuation definition string begin js"><span>/</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="constant character escape backslash regexp"><span>\\</span><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>+</span></span><span class="punctuation definition string end js"><span>/</span></span></span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span></span><span>isAbsolute</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>join</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>tail&nbsp;</span><span class="keyword operator js"><span>&amp;</span><span>&amp;</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span></span><span>isAbsolute</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;tail&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>.</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>tail&nbsp;</span><span class="keyword operator js"><span>&amp;</span><span>&amp;</span></span><span>&nbsp;trailingSlash</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;tail&nbsp;</span><span class="keyword operator js"><span>+</span><span>=</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Convert&nbsp;slashes&nbsp;to&nbsp;backslashes&nbsp;when&nbsp;`device`&nbsp;points&nbsp;to&nbsp;an&nbsp;UNC&nbsp;root.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Also&nbsp;squash&nbsp;multiple&nbsp;slashes&nbsp;into&nbsp;a&nbsp;single&nbsp;one&nbsp;where&nbsp;appropriate.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>isUnc</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;device&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;normalizeUNCRoot</span><span class="meta brace round js"><span>(</span></span><span>device</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;device&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>isAbsolute&nbsp;</span><span class="keyword operator js"><span>?</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;tail</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>win32</span></span><span>.</span><span class="entity name function js"><span>isAbsolute</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>path</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;result&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;splitDeviceRe</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>exec</span></span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;device&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;result</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isUnc&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span><span>!</span></span><span>device&nbsp;</span><span class="keyword operator js"><span>&amp;</span><span>&amp;</span></span><span>&nbsp;device</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>charAt</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span><span>==</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>:</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;UNC&nbsp;paths&nbsp;are&nbsp;always&nbsp;absolute</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span><span>!</span></span><span>result</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>2</span></span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;isUnc</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>win32</span></span><span>.</span><span class="entity name function js"><span>join</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span>&nbsp;</span><span class="entity name function js"><span>f</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>p</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>util</span><span class="meta delimiter method period js"><span>.</span></span><span>isString</span><span class="meta brace round js"><span>(</span></span><span>p</span><span class="meta brace round js"><span>)</span><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>throw</span></span><span>&nbsp;</span><span class="meta class instance constructor"><span class="keyword operator new js"><span>new</span></span><span>&nbsp;</span><span class="entity name type instance js"><span>TypeError</span></span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>Arguments&nbsp;to&nbsp;path.join&nbsp;must&nbsp;be&nbsp;strings</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;p</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;paths&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="support class js"><span>Array</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>prototype</span></span><span class="meta delimiter method period js"><span>.</span></span><span>filter</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>call</span></span><span class="meta brace round js"><span>(</span></span><span>arguments</span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;f</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;joined&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;paths</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>join</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Make&nbsp;sure&nbsp;that&nbsp;the&nbsp;joined&nbsp;path&nbsp;doesn&#39;t&nbsp;start&nbsp;with&nbsp;two&nbsp;slashes,&nbsp;because</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;normalize()&nbsp;will&nbsp;mistake&nbsp;it&nbsp;for&nbsp;an&nbsp;UNC&nbsp;path&nbsp;then.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;This&nbsp;step&nbsp;is&nbsp;skipped&nbsp;when&nbsp;it&nbsp;is&nbsp;very&nbsp;clear&nbsp;that&nbsp;the&nbsp;user&nbsp;actually</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;intended&nbsp;to&nbsp;point&nbsp;at&nbsp;an&nbsp;UNC&nbsp;path.&nbsp;This&nbsp;is&nbsp;assumed&nbsp;when&nbsp;the&nbsp;first</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;non-empty&nbsp;string&nbsp;arguments&nbsp;starts&nbsp;with&nbsp;exactly&nbsp;two&nbsp;slashes&nbsp;followed&nbsp;by</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;at&nbsp;least&nbsp;one&nbsp;more&nbsp;non-slash&nbsp;character.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Note&nbsp;that&nbsp;for&nbsp;normalize()&nbsp;to&nbsp;treat&nbsp;a&nbsp;path&nbsp;as&nbsp;an&nbsp;UNC&nbsp;path&nbsp;it&nbsp;needs&nbsp;to</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;have&nbsp;at&nbsp;least&nbsp;2&nbsp;components,&nbsp;so&nbsp;we&nbsp;don&#39;t&nbsp;filter&nbsp;for&nbsp;that&nbsp;here.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;This&nbsp;means&nbsp;that&nbsp;the&nbsp;user&nbsp;can&nbsp;use&nbsp;join&nbsp;to&nbsp;construct&nbsp;UNC&nbsp;paths&nbsp;from</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;a&nbsp;server&nbsp;name&nbsp;and&nbsp;a&nbsp;share&nbsp;name;&nbsp;for&nbsp;example:</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;&nbsp;&nbsp;path.join(&#39;//server&#39;,&nbsp;&#39;share&#39;)&nbsp;-&gt;&nbsp;&#39;\\\\server\\share\&#39;)</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span class="string regexp js"><span class="punctuation definition string begin js"><span>/</span></span><span class="keyword control anchor regexp"><span>^</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="constant character escape backslash regexp"><span>\\</span><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>{2}</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="keyword operator negation regexp"><span>^</span></span><span class="constant character escape backslash regexp"><span>\\</span><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="punctuation definition string end js"><span>/</span></span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>test</span></span><span class="meta brace round js"><span>(</span></span><span>paths</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>0</span></span><span class="meta brace square js"><span>]</span></span><span class="meta brace round js"><span>)</span><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;joined&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;joined</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>replace</span></span><span class="meta brace round js"><span>(</span></span><span class="string regexp js"><span class="punctuation definition string begin js"><span>/</span></span><span class="keyword control anchor regexp"><span>^</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="constant character escape backslash regexp"><span>\\</span><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>{2,}</span></span><span class="punctuation definition string end js"><span>/</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;win32</span><span class="meta delimiter method period js"><span>.</span></span><span>normalize</span><span class="meta brace round js"><span>(</span></span><span>joined</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;path.relative(from,&nbsp;to)</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;it&nbsp;will&nbsp;solve&nbsp;the&nbsp;relative&nbsp;path&nbsp;from&nbsp;&#39;from&#39;&nbsp;to&nbsp;&#39;to&#39;,&nbsp;for&nbsp;instance:</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;from&nbsp;=&nbsp;&#39;C:\\orandea\\test\\aaa&#39;</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;to&nbsp;=&nbsp;&#39;C:\\orandea\\impl\\bbb&#39;</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;The&nbsp;output&nbsp;of&nbsp;the&nbsp;function&nbsp;should&nbsp;be:&nbsp;&#39;..\\..\\impl\\bbb&#39;</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>win32</span></span><span>.</span><span class="entity name function js"><span>relative</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>from</span></span><span>,&nbsp;</span><span class="variable parameter function js"><span>to</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;from&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;win32</span><span class="meta delimiter method period js"><span>.</span></span><span>resolve</span><span class="meta brace round js"><span>(</span></span><span>from</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;to&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;win32</span><span class="meta delimiter method period js"><span>.</span></span><span>resolve</span><span class="meta brace round js"><span>(</span></span><span>to</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;windows&nbsp;is&nbsp;not&nbsp;case&nbsp;sensitive</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;lowerFrom&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;from</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>toLowerCase</span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;lowerTo&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;to</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>toLowerCase</span></span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span>&nbsp;</span><span class="entity name function js"><span>trim</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>arr</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;start&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="constant numeric js"><span>0</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>for</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;start&nbsp;</span><span class="keyword operator js"><span>&lt;</span></span><span>&nbsp;arr</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;start</span><span class="keyword operator js"><span>++</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>arr</span><span class="meta brace square js"><span>[</span></span><span>start</span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span><span>==</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword control js"><span>break</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;end&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;arr</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span>&nbsp;</span><span class="keyword operator js"><span>-</span></span><span>&nbsp;</span><span class="constant numeric js"><span>1</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>for</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;end&nbsp;</span><span class="keyword operator js"><span>&gt;=</span></span><span>&nbsp;</span><span class="constant numeric js"><span>0</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;end</span><span class="keyword operator js"><span>--</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>arr</span><span class="meta brace square js"><span>[</span></span><span>end</span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span><span>==</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword control js"><span>break</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>start&nbsp;</span><span class="keyword operator js"><span>&gt;</span></span><span>&nbsp;end</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="meta brace square js"><span>[</span><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;arr</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>slice</span></span><span class="meta brace round js"><span>(</span></span><span>start</span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;end&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;</span><span class="constant numeric js"><span>1</span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;toParts&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;trim</span><span class="meta brace round js"><span>(</span></span><span>to</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>split</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;lowerFromParts&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;trim</span><span class="meta brace round js"><span>(</span></span><span>lowerFrom</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>split</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;lowerToParts&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;trim</span><span class="meta brace round js"><span>(</span></span><span>lowerTo</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>split</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;length&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="support class js"><span>Math</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>min</span></span><span class="meta brace round js"><span>(</span></span><span>lowerFromParts</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;lowerToParts</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;samePartsLength&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;length</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>for</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="storage modifier js"><span>var</span></span><span>&nbsp;i&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="constant numeric js"><span>0</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;i&nbsp;</span><span class="keyword operator js"><span>&lt;</span></span><span>&nbsp;length</span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;i</span><span class="keyword operator js"><span>++</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>lowerFromParts</span><span class="meta brace square js"><span>[</span></span><span>i</span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span><span>==</span></span><span>&nbsp;lowerToParts</span><span class="meta brace square js"><span>[</span></span><span>i</span><span class="meta brace square js"><span>]</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;samePartsLength&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;i</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>break</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>samePartsLength&nbsp;</span><span class="keyword operator js"><span>==</span></span><span>&nbsp;</span><span class="constant numeric js"><span>0</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;to</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;outputParts&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="meta brace square js"><span>[</span><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>for</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="storage modifier js"><span>var</span></span><span>&nbsp;i&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;samePartsLength</span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;i&nbsp;</span><span class="keyword operator js"><span>&lt;</span></span><span>&nbsp;lowerFromParts</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;i</span><span class="keyword operator js"><span>++</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;outputParts</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>push</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>..</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;outputParts&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;outputParts</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>concat</span></span><span class="meta brace round js"><span>(</span></span><span>toParts</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>slice</span></span><span class="meta brace round js"><span>(</span></span><span>samePartsLength</span><span class="meta brace round js"><span>)</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;outputParts</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>join</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>win32</span></span><span>.</span><span class="entity name function js"><span>_makeLong</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>path</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Note:&nbsp;this&nbsp;will&nbsp;*probably*&nbsp;throw&nbsp;somewhere.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>util</span><span class="meta delimiter method period js"><span>.</span></span><span>isString</span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta brace round js"><span>)</span><span>)</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;path</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;resolvedPath&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;win32</span><span class="meta delimiter method period js"><span>.</span></span><span>resolve</span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="string regexp js"><span class="punctuation definition string begin js"><span>/</span></span><span class="keyword control anchor regexp"><span>^</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="constant other character-class range regexp"><span>a-z</span><span>A-Z</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="constant character escape backslash regexp"><span>\:</span><span>\\</span></span><span class="punctuation definition string end js"><span>/</span></span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>test</span></span><span class="meta brace round js"><span>(</span></span><span>resolvedPath</span><span class="meta brace round js"><span>)</span><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;path&nbsp;is&nbsp;local&nbsp;filesystem&nbsp;path,&nbsp;which&nbsp;needs&nbsp;to&nbsp;be&nbsp;converted</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;to&nbsp;long&nbsp;UNC&nbsp;path.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span><span>\\</span></span><span>?</span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;resolvedPath</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span><span>&nbsp;</span><span class="keyword control js"><span>else</span></span><span>&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="string regexp js"><span class="punctuation definition string begin js"><span>/</span></span><span class="keyword control anchor regexp"><span>^</span></span><span class="constant character escape backslash regexp"><span>\\</span><span>\\</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="keyword operator negation regexp"><span>^</span></span><span>?</span><span class="constant character character-class regexp"><span>.</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="punctuation definition string end js"><span>/</span></span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>test</span></span><span class="meta brace round js"><span>(</span></span><span>resolvedPath</span><span class="meta brace round js"><span>)</span><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;path&nbsp;is&nbsp;network&nbsp;UNC&nbsp;path,&nbsp;which&nbsp;needs&nbsp;to&nbsp;be&nbsp;converted</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;to&nbsp;long&nbsp;UNC&nbsp;path.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span><span>\\</span></span><span>?</span><span class="constant character escape js"><span>\\</span></span><span>UNC</span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;resolvedPath</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>substring</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>2</span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;path</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>win32</span></span><span>.</span><span class="entity name function js"><span>dirname</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>path</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;result&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;win32SplitPath</span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;result</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>0</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dir&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;result</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace square js"><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>root&nbsp;</span><span class="keyword operator js"><span>&amp;</span><span>&amp;</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span></span><span>dir</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;No&nbsp;dirname&nbsp;whatsoever</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>.</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>dir</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;It&nbsp;has&nbsp;a&nbsp;dirname,&nbsp;strip&nbsp;trailing&nbsp;slash</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;dir&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;dir</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>substr</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>0</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;dir</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span>&nbsp;</span><span class="keyword operator js"><span>-</span></span><span>&nbsp;</span><span class="constant numeric js"><span>1</span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;root&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;dir</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>win32</span></span><span>.</span><span class="entity name function js"><span>basename</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>path</span></span><span>,&nbsp;</span><span class="variable parameter function js"><span>ext</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;f&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;win32SplitPath</span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>2</span></span><span class="meta brace square js"><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;</span><span class="storage type class todo"><span>TODO</span></span><span>:&nbsp;make&nbsp;this&nbsp;comparison&nbsp;case-insensitive&nbsp;on&nbsp;windows?</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>ext&nbsp;</span><span class="keyword operator js"><span>&amp;</span><span>&amp;</span></span><span>&nbsp;f</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>substr</span></span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>-</span></span><span class="constant numeric js"><span>1</span></span><span>&nbsp;</span><span class="keyword operator js"><span>*</span></span><span>&nbsp;ext</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>===</span></span><span>&nbsp;ext</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;f&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;f</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>substr</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>0</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;f</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span>&nbsp;</span><span class="keyword operator js"><span>-</span></span><span>&nbsp;ext</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;f</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>win32</span></span><span>.</span><span class="entity name function js"><span>extname</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>path</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;win32SplitPath</span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>3</span></span><span class="meta brace square js"><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>win32</span></span><span>.</span><span class="entity name function js"><span>format</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>pathObject</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>util</span><span class="meta delimiter method period js"><span>.</span></span><span>isObject</span><span class="meta brace round js"><span>(</span></span><span>pathObject</span><span class="meta brace round js"><span>)</span><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>throw</span></span><span>&nbsp;</span><span class="meta class instance constructor"><span class="keyword operator new js"><span>new</span></span><span>&nbsp;</span><span class="entity name type instance js"><span>TypeError</span></span></span><span class="meta brace round js"><span>(</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>Parameter&nbsp;&#39;pathObject&#39;&nbsp;must&nbsp;be&nbsp;an&nbsp;object,&nbsp;not&nbsp;</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;</span><span class="keyword operator js"><span>typeof</span></span><span>&nbsp;pathObject</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;root&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;pathObject</span><span class="meta delimiter method period js"><span>.</span></span><span>root&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>util</span><span class="meta delimiter method period js"><span>.</span></span><span>isString</span><span class="meta brace round js"><span>(</span></span><span>root</span><span class="meta brace round js"><span>)</span><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>throw</span></span><span>&nbsp;</span><span class="meta class instance constructor"><span class="keyword operator new js"><span>new</span></span><span>&nbsp;</span><span class="entity name type instance js"><span>TypeError</span></span></span><span class="meta brace round js"><span>(</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>&#39;pathObject.root&#39;&nbsp;must&nbsp;be&nbsp;a&nbsp;string&nbsp;or&nbsp;undefined,&nbsp;not&nbsp;</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword operator js"><span>typeof</span></span><span>&nbsp;pathObject</span><span class="meta delimiter method period js"><span>.</span></span><span>root</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;dir&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;pathObject</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant dom js"><span>dir</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;base&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;pathObject</span><span class="meta delimiter method period js"><span>.</span></span><span>base&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>dir</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>slice</span></span><span class="meta brace round js"><span>(</span></span><span>dir</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span>&nbsp;</span><span class="keyword operator js"><span>-</span></span><span>&nbsp;</span><span class="constant numeric js"><span>1</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;dir</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>===</span></span><span>&nbsp;win32</span><span class="meta delimiter method period js"><span>.</span></span><span>sep</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;dir&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;base</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>dir</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;dir&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;win32</span><span class="meta delimiter method period js"><span>.</span></span><span>sep&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;base</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;base</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>win32</span></span><span>.</span><span class="entity name function js"><span>parse</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>pathString</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>util</span><span class="meta delimiter method period js"><span>.</span></span><span>isString</span><span class="meta brace round js"><span>(</span></span><span>pathString</span><span class="meta brace round js"><span>)</span><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>throw</span></span><span>&nbsp;</span><span class="meta class instance constructor"><span class="keyword operator new js"><span>new</span></span><span>&nbsp;</span><span class="entity name type instance js"><span>TypeError</span></span></span><span class="meta brace round js"><span>(</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>Parameter&nbsp;&#39;pathString&#39;&nbsp;must&nbsp;be&nbsp;a&nbsp;string,&nbsp;not&nbsp;</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;</span><span class="keyword operator js"><span>typeof</span></span><span>&nbsp;pathString</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;allParts&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;win32SplitPath</span><span class="meta brace round js"><span>(</span></span><span>pathString</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>allParts&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;allParts</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span><span>==</span></span><span>&nbsp;</span><span class="constant numeric js"><span>4</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>throw</span></span><span>&nbsp;</span><span class="meta class instance constructor"><span class="keyword operator new js"><span>new</span></span><span>&nbsp;</span><span class="entity name type instance js"><span>TypeError</span></span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>Invalid&nbsp;path&nbsp;&#39;</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;pathString&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;</span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>&#39;</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;root</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>0</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;dir</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>0</span></span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>slice</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>0</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span>&nbsp;</span><span class="keyword operator js"><span>-</span></span><span>&nbsp;</span><span class="constant numeric js"><span>1</span></span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;base</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>2</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;ext</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>3</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;name</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>2</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>slice</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>0</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>2</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span>&nbsp;</span><span class="keyword operator js"><span>-</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>3</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span class="meta brace round js"><span>)</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>win32</span><span class="meta delimiter method period js"><span>.</span></span><span>sep&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="constant character escape js"><span>\\</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>win32</span><span class="meta delimiter method period js"><span>.</span></span><span>delimiter&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>;</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Split&nbsp;a&nbsp;filename&nbsp;into&nbsp;[root,&nbsp;dir,&nbsp;basename,&nbsp;ext],&nbsp;unix&nbsp;version</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;&#39;root&#39;&nbsp;is&nbsp;just&nbsp;a&nbsp;slash,&nbsp;or&nbsp;nothing.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="storage modifier js"><span>var</span></span><span>&nbsp;splitPathRe&nbsp;</span><span class="keyword operator js"><span>=</span></span></span></div>
  <div class="line"><span class="source js"><span class="string regexp js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string begin js"><span>/</span></span><span class="keyword control anchor regexp"><span>^</span></span><span class="meta group regexp"><span class="punctuation definition group regexp"><span>(</span></span><span class="constant character escape backslash regexp"><span>\/</span></span><span class="keyword operator quantifier regexp"><span>?</span></span><span class="keyword operator or regexp"><span>
  </span></span><span class="punctuation definition group regexp"><span>)</span><span>(</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="constant character character-class regexp"><span>\s</span><span>\S</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>*</span><span>?</span></span><span class="punctuation definition group regexp"><span>)</span><span>(</span></span><span class="meta group regexp"><span class="punctuation definition group regexp"><span>(?:</span></span><span class="constant character escape backslash regexp"><span>\.</span></span><span class="keyword operator quantifier regexp"><span>{1,2}</span></span><span class="keyword operator or regexp"><span>
  </span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="keyword operator negation regexp"><span>^</span></span><span class="constant character escape backslash regexp"><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>+</span><span>?</span></span><span class="keyword operator or regexp"><span>
  </span></span><span class="punctuation definition group regexp"><span>)</span><span>(</span></span><span class="constant character escape backslash regexp"><span>\.</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="keyword operator negation regexp"><span>^</span></span><span class="constant character character-class regexp"><span>.</span></span><span class="constant character escape backslash regexp"><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>*</span></span><span class="keyword operator or regexp"><span>
  </span></span><span class="punctuation definition group regexp"><span>)</span></span></span><span class="punctuation definition group regexp"><span>)</span><span>(?:</span></span><span class="constant other character-class set regexp"><span class="punctuation definition character-class regexp"><span>[</span></span><span class="constant character escape backslash regexp"><span>\/</span></span><span class="punctuation definition character-class regexp"><span>]</span></span></span><span class="keyword operator quantifier regexp"><span>*</span></span><span class="punctuation definition group regexp"><span>)</span></span></span><span class="keyword control anchor regexp"><span>$</span></span><span class="punctuation definition string end js"><span>/</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="storage modifier js"><span>var</span></span><span>&nbsp;posix&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="punctuation section scope begin js"><span>{</span></span><span class="punctuation section scope end js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="storage type function js"><span>function</span></span><span>&nbsp;</span><span class="entity name function js"><span>posixSplitPath</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>filename</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;splitPathRe</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>exec</span></span><span class="meta brace round js"><span>(</span></span><span>filename</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>slice</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;path.resolve([from&nbsp;...],&nbsp;to)</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;posix&nbsp;version</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>posix</span></span><span>.</span><span class="entity name function js"><span>resolve</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;resolvedPath&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolvedAbsolute&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="constant language boolean false js"><span>false</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>for</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="storage modifier js"><span>var</span></span><span>&nbsp;i&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;arguments</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span>&nbsp;</span><span class="keyword operator js"><span>-</span></span><span>&nbsp;</span><span class="constant numeric js"><span>1</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;i&nbsp;</span><span class="keyword operator js"><span>&gt;=</span></span><span>&nbsp;</span><span class="keyword operator js"><span>-</span></span><span class="constant numeric js"><span>1</span></span><span>&nbsp;</span><span class="keyword operator js"><span>&amp;</span><span>&amp;</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span></span><span>resolvedAbsolute</span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;i</span><span class="keyword operator js"><span>--</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;path&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>i&nbsp;</span><span class="keyword operator js"><span>&gt;=</span></span><span>&nbsp;</span><span class="constant numeric js"><span>0</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>?</span></span><span>&nbsp;arguments</span><span class="meta brace square js"><span>[</span></span><span>i</span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;</span><span class="support variable js"><span>process</span></span><span class="meta delimiter method period js"><span>.</span></span><span>cwd</span><span class="meta brace round js"><span>(</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Skip&nbsp;empty&nbsp;and&nbsp;invalid&nbsp;entries</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>util</span><span class="meta delimiter method period js"><span>.</span></span><span>isString</span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta brace round js"><span>)</span><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>throw</span></span><span>&nbsp;</span><span class="meta class instance constructor"><span class="keyword operator new js"><span>new</span></span><span>&nbsp;</span><span class="entity name type instance js"><span>TypeError</span></span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>Arguments&nbsp;to&nbsp;path.resolve&nbsp;must&nbsp;be&nbsp;strings</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span><span>&nbsp;</span><span class="keyword control js"><span>else</span></span><span>&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>continue</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;resolvedPath&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;path&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>/</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;resolvedPath</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;resolvedAbsolute&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;path</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>charAt</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>0</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>===</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>/</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;At&nbsp;this&nbsp;point&nbsp;the&nbsp;path&nbsp;should&nbsp;be&nbsp;resolved&nbsp;to&nbsp;a&nbsp;full&nbsp;absolute&nbsp;path,&nbsp;but</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;handle&nbsp;relative&nbsp;paths&nbsp;to&nbsp;be&nbsp;safe&nbsp;(might&nbsp;happen&nbsp;when&nbsp;process.cwd()&nbsp;fails)</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Normalize&nbsp;the&nbsp;path</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;resolvedPath&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;normalizeArray</span><span class="meta brace round js"><span>(</span></span><span>resolvedPath</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>split</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>/</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword operator js"><span>!</span></span><span>resolvedAbsolute</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>join</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>/</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span><span>(</span></span><span>resolvedAbsolute&nbsp;</span><span class="keyword operator js"><span>?</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>/</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;resolvedPath</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>.</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;path.normalize(path)</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;posix&nbsp;version</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>posix</span></span><span>.</span><span class="entity name function js"><span>normalize</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>path</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;isAbsolute&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;posix</span><span class="meta delimiter method period js"><span>.</span></span><span>isAbsolute</span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;trailingSlash&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;path</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>substr</span></span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>-</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>===</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>/</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;Normalize&nbsp;the&nbsp;path</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;path&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;normalizeArray</span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>split</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>/</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span></span><span>isAbsolute</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>join</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>/</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>path&nbsp;</span><span class="keyword operator js"><span>&amp;</span><span>&amp;</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span></span><span>isAbsolute</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>.</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>path&nbsp;</span><span class="keyword operator js"><span>&amp;</span><span>&amp;</span></span><span>&nbsp;trailingSlash</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;</span><span class="keyword operator js"><span>+</span><span>=</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>/</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>isAbsolute&nbsp;</span><span class="keyword operator js"><span>?</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>/</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;path</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;posix&nbsp;version</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>posix</span></span><span>.</span><span class="entity name function js"><span>isAbsolute</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>path</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;path</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>charAt</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>0</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>===</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>/</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;posix&nbsp;version</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>posix</span></span><span>.</span><span class="entity name function js"><span>join</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;path&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>for</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="storage modifier js"><span>var</span></span><span>&nbsp;i&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="constant numeric js"><span>0</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;i&nbsp;</span><span class="keyword operator js"><span>&lt;</span></span><span>&nbsp;arguments</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;i</span><span class="keyword operator js"><span>++</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;segment&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;arguments</span><span class="meta brace square js"><span>[</span></span><span>i</span><span class="meta brace square js"><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>util</span><span class="meta delimiter method period js"><span>.</span></span><span>isString</span><span class="meta brace round js"><span>(</span></span><span>segment</span><span class="meta brace round js"><span>)</span><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>throw</span></span><span>&nbsp;</span><span class="meta class instance constructor"><span class="keyword operator new js"><span>new</span></span><span>&nbsp;</span><span class="entity name type instance js"><span>TypeError</span></span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>Arguments&nbsp;to&nbsp;path.join&nbsp;must&nbsp;be&nbsp;strings</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>segment</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;</span><span class="keyword operator js"><span>+</span><span>=</span></span><span>&nbsp;segment</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span><span>&nbsp;</span><span class="keyword control js"><span>else</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;</span><span class="keyword operator js"><span>+</span><span>=</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>/</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;segment</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;posix</span><span class="meta delimiter method period js"><span>.</span></span><span>normalize</span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;path.relative(from,&nbsp;to)</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;posix&nbsp;version</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>posix</span></span><span>.</span><span class="entity name function js"><span>relative</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>from</span></span><span>,&nbsp;</span><span class="variable parameter function js"><span>to</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;from&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;posix</span><span class="meta delimiter method period js"><span>.</span></span><span>resolve</span><span class="meta brace round js"><span>(</span></span><span>from</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>substr</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;to&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;posix</span><span class="meta delimiter method period js"><span>.</span></span><span>resolve</span><span class="meta brace round js"><span>(</span></span><span>to</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>substr</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta function js"><span class="storage type function js"><span>function</span></span><span>&nbsp;</span><span class="entity name function js"><span>trim</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>arr</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;start&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="constant numeric js"><span>0</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>for</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;start&nbsp;</span><span class="keyword operator js"><span>&lt;</span></span><span>&nbsp;arr</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;start</span><span class="keyword operator js"><span>++</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>arr</span><span class="meta brace square js"><span>[</span></span><span>start</span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span><span>==</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword control js"><span>break</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;end&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;arr</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span>&nbsp;</span><span class="keyword operator js"><span>-</span></span><span>&nbsp;</span><span class="constant numeric js"><span>1</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>for</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;end&nbsp;</span><span class="keyword operator js"><span>&gt;=</span></span><span>&nbsp;</span><span class="constant numeric js"><span>0</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;end</span><span class="keyword operator js"><span>--</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>arr</span><span class="meta brace square js"><span>[</span></span><span>end</span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span><span>==</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword control js"><span>break</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>start&nbsp;</span><span class="keyword operator js"><span>&gt;</span></span><span>&nbsp;end</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="meta brace square js"><span>[</span><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;arr</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>slice</span></span><span class="meta brace round js"><span>(</span></span><span>start</span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;end&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;</span><span class="constant numeric js"><span>1</span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;fromParts&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;trim</span><span class="meta brace round js"><span>(</span></span><span>from</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>split</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>/</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;toParts&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;trim</span><span class="meta brace round js"><span>(</span></span><span>to</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>split</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>/</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;length&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="support class js"><span>Math</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>min</span></span><span class="meta brace round js"><span>(</span></span><span>fromParts</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;toParts</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;samePartsLength&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;length</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>for</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="storage modifier js"><span>var</span></span><span>&nbsp;i&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="constant numeric js"><span>0</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;i&nbsp;</span><span class="keyword operator js"><span>&lt;</span></span><span>&nbsp;length</span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;i</span><span class="keyword operator js"><span>++</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>fromParts</span><span class="meta brace square js"><span>[</span></span><span>i</span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span><span>==</span></span><span>&nbsp;toParts</span><span class="meta brace square js"><span>[</span></span><span>i</span><span class="meta brace square js"><span>]</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;samePartsLength&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;i</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>break</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;outputParts&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="meta brace square js"><span>[</span><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>for</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="storage modifier js"><span>var</span></span><span>&nbsp;i&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;samePartsLength</span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;i&nbsp;</span><span class="keyword operator js"><span>&lt;</span></span><span>&nbsp;fromParts</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span class="punctuation terminator statement js"><span>;</span></span><span>&nbsp;i</span><span class="keyword operator js"><span>++</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;outputParts</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>push</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>..</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;outputParts&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;outputParts</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>concat</span></span><span class="meta brace round js"><span>(</span></span><span>toParts</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>slice</span></span><span class="meta brace round js"><span>(</span></span><span>samePartsLength</span><span class="meta brace round js"><span>)</span><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;outputParts</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>join</span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>/</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>posix</span></span><span>.</span><span class="entity name function js"><span>_makeLong</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>path</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;path</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>posix</span></span><span>.</span><span class="entity name function js"><span>dirname</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>path</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;result&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;posixSplitPath</span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;root&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;result</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>0</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dir&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;result</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace square js"><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>root&nbsp;</span><span class="keyword operator js"><span>&amp;</span><span>&amp;</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span></span><span>dir</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;No&nbsp;dirname&nbsp;whatsoever</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>.</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>dir</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;It&nbsp;has&nbsp;a&nbsp;dirname,&nbsp;strip&nbsp;trailing&nbsp;slash</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;dir&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;dir</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>substr</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>0</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;dir</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span>&nbsp;</span><span class="keyword operator js"><span>-</span></span><span>&nbsp;</span><span class="constant numeric js"><span>1</span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;root&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;dir</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>posix</span></span><span>.</span><span class="entity name function js"><span>basename</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>path</span></span><span>,&nbsp;</span><span class="variable parameter function js"><span>ext</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;f&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;posixSplitPath</span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>2</span></span><span class="meta brace square js"><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;</span><span class="storage type class todo"><span>TODO</span></span><span>:&nbsp;make&nbsp;this&nbsp;comparison&nbsp;case-insensitive&nbsp;on&nbsp;windows?</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>ext&nbsp;</span><span class="keyword operator js"><span>&amp;</span><span>&amp;</span></span><span>&nbsp;f</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>substr</span></span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>-</span></span><span class="constant numeric js"><span>1</span></span><span>&nbsp;</span><span class="keyword operator js"><span>*</span></span><span>&nbsp;ext</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="keyword operator js"><span>===</span></span><span>&nbsp;ext</span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;f&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;f</span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>substr</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>0</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;f</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span>&nbsp;</span><span class="keyword operator js"><span>-</span></span><span>&nbsp;ext</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;f</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>posix</span></span><span>.</span><span class="entity name function js"><span>extname</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>path</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;posixSplitPath</span><span class="meta brace round js"><span>(</span></span><span>path</span><span class="meta brace round js"><span>)</span></span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>3</span></span><span class="meta brace square js"><span>]</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>posix</span></span><span>.</span><span class="entity name function js"><span>format</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>pathObject</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>util</span><span class="meta delimiter method period js"><span>.</span></span><span>isObject</span><span class="meta brace round js"><span>(</span></span><span>pathObject</span><span class="meta brace round js"><span>)</span><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>throw</span></span><span>&nbsp;</span><span class="meta class instance constructor"><span class="keyword operator new js"><span>new</span></span><span>&nbsp;</span><span class="entity name type instance js"><span>TypeError</span></span></span><span class="meta brace round js"><span>(</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>Parameter&nbsp;&#39;pathObject&#39;&nbsp;must&nbsp;be&nbsp;an&nbsp;object,&nbsp;not&nbsp;</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;</span><span class="keyword operator js"><span>typeof</span></span><span>&nbsp;pathObject</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;root&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;pathObject</span><span class="meta delimiter method period js"><span>.</span></span><span>root&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>util</span><span class="meta delimiter method period js"><span>.</span></span><span>isString</span><span class="meta brace round js"><span>(</span></span><span>root</span><span class="meta brace round js"><span>)</span><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>throw</span></span><span>&nbsp;</span><span class="meta class instance constructor"><span class="keyword operator new js"><span>new</span></span><span>&nbsp;</span><span class="entity name type instance js"><span>TypeError</span></span></span><span class="meta brace round js"><span>(</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>&#39;pathObject.root&#39;&nbsp;must&nbsp;be&nbsp;a&nbsp;string&nbsp;or&nbsp;undefined,&nbsp;not&nbsp;</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword operator js"><span>typeof</span></span><span>&nbsp;pathObject</span><span class="meta delimiter method period js"><span>.</span></span><span>root</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;dir&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;pathObject</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant dom js"><span>dir</span></span><span>&nbsp;</span><span class="keyword operator js"><span>?</span></span><span>&nbsp;pathObject</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant dom js"><span>dir</span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;posix</span><span class="meta delimiter method period js"><span>.</span></span><span>sep&nbsp;</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;base&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;pathObject</span><span class="meta delimiter method period js"><span>.</span></span><span>base&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;dir&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;base</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="meta function js"><span class="support class js"><span>posix</span></span><span>.</span><span class="entity name function js"><span>parse</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="punctuation definition parameters begin js"><span>(</span></span><span class="variable parameter function js"><span>pathString</span></span><span class="punctuation definition parameters end js"><span>)</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>util</span><span class="meta delimiter method period js"><span>.</span></span><span>isString</span><span class="meta brace round js"><span>(</span></span><span>pathString</span><span class="meta brace round js"><span>)</span><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>throw</span></span><span>&nbsp;</span><span class="meta class instance constructor"><span class="keyword operator new js"><span>new</span></span><span>&nbsp;</span><span class="entity name type instance js"><span>TypeError</span></span></span><span class="meta brace round js"><span>(</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>Parameter&nbsp;&#39;pathString&#39;&nbsp;must&nbsp;be&nbsp;a&nbsp;string,&nbsp;not&nbsp;</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;</span><span class="keyword operator js"><span>typeof</span></span><span>&nbsp;pathString</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="storage modifier js"><span>var</span></span><span>&nbsp;allParts&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;posixSplitPath</span><span class="meta brace round js"><span>(</span></span><span>pathString</span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span class="keyword operator js"><span>!</span></span><span>allParts&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;allParts</span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span>&nbsp;</span><span class="keyword operator js"><span>!</span><span>==</span></span><span>&nbsp;</span><span class="constant numeric js"><span>4</span></span><span class="meta brace round js"><span>)</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>throw</span></span><span>&nbsp;</span><span class="meta class instance constructor"><span class="keyword operator new js"><span>new</span></span><span>&nbsp;</span><span class="entity name type instance js"><span>TypeError</span></span></span><span class="meta brace round js"><span>(</span></span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>Invalid&nbsp;path&nbsp;&#39;</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;pathString&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;</span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>&#39;</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span class="meta brace round js"><span>)</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>2</span></span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>2</span></span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>3</span></span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>3</span></span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>

  </span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;root</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>0</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;dir</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>0</span></span><span class="meta brace square js"><span>]</span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>slice</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>0</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>1</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span>&nbsp;</span><span class="keyword operator js"><span>-</span></span><span>&nbsp;</span><span class="constant numeric js"><span>1</span></span><span class="meta brace round js"><span>)</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;base</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>2</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;ext</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>3</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;name</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>2</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support function js"><span>slice</span></span><span class="meta brace round js"><span>(</span></span><span class="constant numeric js"><span>0</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>2</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span>&nbsp;</span><span class="keyword operator js"><span>-</span></span><span>&nbsp;allParts</span><span class="meta brace square js"><span>[</span></span><span class="constant numeric js"><span>3</span></span><span class="meta brace square js"><span>]</span></span><span class="meta delimiter method period js"><span>.</span></span><span class="support constant js"><span>length</span></span><span class="meta brace round js"><span>)</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>posix</span><span class="meta delimiter method period js"><span>.</span></span><span>sep&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>/</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>posix</span><span class="meta delimiter method period js"><span>.</span></span><span>delimiter&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>:</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="keyword control js"><span>if</span></span><span>&nbsp;</span><span class="meta brace round js"><span>(</span></span><span>isWindows</span><span class="meta brace round js"><span>)</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="support variable js"><span>module</span></span><span class="meta delimiter method period js"><span>.</span></span><span>exports&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;win32</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="keyword control js"><span>else</span></span><span>&nbsp;</span><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span>&nbsp;posix&nbsp;</span><span class="punctuation definition comment js"><span>*/</span></span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;&nbsp;</span><span class="support variable js"><span>module</span></span><span class="meta delimiter method period js"><span>.</span></span><span>exports&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;posix</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source js"><span class="support variable js"><span>module</span></span><span class="meta delimiter method period js"><span>.</span></span><span>exports</span><span class="meta delimiter method period js"><span>.</span></span><span>posix&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;posix</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
  <div class="line"><span class="source js"><span class="support variable js"><span>module</span></span><span class="meta delimiter method period js"><span>.</span></span><span>exports</span><span class="meta delimiter method period js"><span>.</span></span><span>win32&nbsp;</span><span class="keyword operator js"><span>=</span></span><span>&nbsp;win32</span><span class="punctuation terminator statement js"><span>;</span></span></span></div>
</div>


</body>

</html>
