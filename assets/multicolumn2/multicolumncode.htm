<html>

<head>
  <meta charset="utf-8" />
  <title>django/forms/forms.py</title>

  <!--link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/shahbazprism.css">
  <link rel="stylesheet" href="/css/custom.css"-->
  <link rel="stylesheet" href="/assets/multicolumn2/atom-light.css">
  <style>
      body {
        font-family: Menlo,Monaco,Consolas,"Courier New",monospace;
        font-size: 12px;
      }

      @media all and (min-width: 1000px) {
      .editor-colors {
        -webkit-column-width: 500px;
        -moz-column-width: 500px;
        column-width: 500px;

        -moz-column-rule: 1px dotted #ccc;
        -webkit-column-rule: 1px dotted #ccc;
        column-rule: 1px dotted #ccc;

      }

      .editor-colors {
        height:100%;
      }
    }
  </style>

</head>


<body>

  <div class="editor editor-colors">
  <div class="line"><span class="source python"><span class="keyword control import from python"><span>from</span></span><span>&nbsp;</span><span>__future__</span><span>&nbsp;</span><span class="keyword control import python"><span>import</span></span><span>&nbsp;</span><span>unicode_literals</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="keyword control import python"><span>import</span></span><span>&nbsp;</span><span>copy</span></span></div>
  <div class="line"><span class="source python"><span class="keyword control import python"><span>import</span></span><span>&nbsp;</span><span>datetime</span></span></div>
  <div class="line"><span class="source python"><span class="keyword control import from python"><span>from</span></span><span>&nbsp;</span><span>collections</span><span>&nbsp;</span><span class="keyword control import python"><span>import</span></span><span>&nbsp;</span><span>OrderedDict</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="keyword control import from python"><span>from</span></span><span>&nbsp;</span><span>django</span><span>.</span><span>core</span><span>.</span><span>exceptions</span><span>&nbsp;</span><span class="keyword control import python"><span>import</span></span><span>&nbsp;</span><span>NON_FIELD_ERRORS</span><span>,&nbsp;</span><span>ValidationError</span></span></div>
  <div class="line"><span class="source python"><span class="keyword control import from python"><span>from</span></span><span>&nbsp;</span><span>django</span><span>.</span><span>forms</span><span>.</span><span>fields</span><span>&nbsp;</span><span class="keyword control import python"><span>import</span></span><span>&nbsp;</span><span>Field</span><span>,&nbsp;</span><span>FileField</span></span></div>
  <div class="line"><span class="source python"><span class="keyword control import from python"><span>from</span></span><span>&nbsp;</span><span>django</span><span>.</span><span>forms</span><span>.</span><span>utils</span><span>&nbsp;</span><span class="keyword control import python"><span>import</span></span><span>&nbsp;</span><span>ErrorDict</span><span>,&nbsp;</span><span>ErrorList</span><span>,&nbsp;</span><span>flatatt</span></span></div>
  <div class="line"><span class="source python"><span class="keyword control import from python"><span>from</span></span><span>&nbsp;</span><span>django</span><span>.</span><span>forms</span><span>.</span><span>widgets</span><span>&nbsp;</span><span class="keyword control import python"><span>import</span></span><span>&nbsp;</span><span>Media</span><span>,&nbsp;</span><span>MediaDefiningClass</span><span>,&nbsp;</span><span>Textarea</span><span>,&nbsp;</span><span>TextInput</span></span></div>
  <div class="line"><span class="source python"><span class="keyword control import from python"><span>from</span></span><span>&nbsp;</span><span>django</span><span>.</span><span>utils</span><span>&nbsp;</span><span class="keyword control import python"><span>import</span></span><span>&nbsp;</span><span>six</span></span></div>
  <div class="line"><span class="source python"><span class="keyword control import from python"><span>from</span></span><span>&nbsp;</span><span>django</span><span>.</span><span>utils</span><span>.</span><span>encoding</span><span>&nbsp;</span><span class="keyword control import python"><span>import</span></span><span>&nbsp;</span><span>(</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>force_text</span><span>,&nbsp;</span><span>python_2_unicode_compatible</span><span>,&nbsp;</span><span>smart_text</span><span>,</span></span></div>
  <div class="line"><span class="source python"><span>)</span></span></div>
  <div class="line"><span class="source python"><span class="keyword control import from python"><span>from</span></span><span>&nbsp;</span><span>django</span><span>.</span><span>utils</span><span>.</span><span>html</span><span>&nbsp;</span><span class="keyword control import python"><span>import</span></span><span>&nbsp;</span><span>conditional_escape</span><span>,&nbsp;</span><span>format_html</span></span></div>
  <div class="line"><span class="source python"><span class="keyword control import from python"><span>from</span></span><span>&nbsp;</span><span>django</span><span>.</span><span>utils</span><span>.</span><span>safestring</span><span>&nbsp;</span><span class="keyword control import python"><span>import</span></span><span>&nbsp;</span><span>mark_safe</span></span></div>
  <div class="line"><span class="source python"><span class="keyword control import from python"><span>from</span></span><span>&nbsp;</span><span>django</span><span>.</span><span>utils</span><span>.</span><span>translation</span><span>&nbsp;</span><span class="keyword control import python"><span>import</span></span><span>&nbsp;</span><span>ugettext</span><span>&nbsp;</span><span class="keyword other python"><span>as</span></span><span>&nbsp;</span><span>_</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="support variable magic python"><span>__all__</span></span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>(</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>BaseForm</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>,&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>Form</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>)</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>pretty_name</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>name</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span><span>Converts&nbsp;&#39;first_name&#39;&nbsp;to&nbsp;&#39;First&nbsp;name&#39;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span>name</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="punctuation definition string end python"><span class="meta empty-string single python"><span>&#39;</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span>name</span><span>.</span><span>replace</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>_</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>,&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>&nbsp;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>.</span><span class="meta function-call python"><span>c</span><span>apitalize</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>UNSET</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support type python"><span>object</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta class python"><span class="storage type class python"><span>class</span></span><span>&nbsp;</span><span class="entity name type class python"><span>DeclarativeFieldsMetaclass</span></span><span class="punctuation definition inheritance begin python"><span>(</span></span><span class="meta class inheritance python"><span class="entity other inherited-class python"><span>MediaDefiningClass</span></span></span><span class="punctuation definition inheritance end python"><span>)</span></span><span class="punctuation section class begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;Metaclass&nbsp;that&nbsp;collects&nbsp;Fields&nbsp;declared&nbsp;on&nbsp;the&nbsp;base&nbsp;classes.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span class="support function magic python"><span>__new__</span></span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>mcs</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>name</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>bases</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>attrs</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Collect&nbsp;fields&nbsp;from&nbsp;current&nbsp;class.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>current_fields</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta structure list python"><span class="punctuation definition list begin python"><span>[</span></span><span class="punctuation definition list end python"><span>]</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control repeat python"><span>for</span></span><span>&nbsp;</span><span>key</span><span>,&nbsp;</span><span>value</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support type python"><span>list</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="meta function-call python"><span>attrs</span><span>.</span><span>items</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support function builtin python"><span>isinstance</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>value</span><span>,&nbsp;</span><span>Field</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span>current_fields</span><span>.</span><span>append</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>(</span><span>key</span><span>,&nbsp;</span><span>value</span><span>)</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span>attrs</span><span>.</span><span>pop</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>key</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span>current_fields</span><span>.</span><span>sort</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable parameter function python"><span>key</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="meta function inline python"><span class="storage type function inline python"><span>lambda</span></span><span>&nbsp;</span><span class="meta function inline parameters python"><span class="variable parameter function python"><span>x</span></span></span><span class="punctuation definition parameters end python"><span>:</span></span></span><span>&nbsp;</span><span class="meta item-access python"><span>x</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span class="constant numeric integer decimal python"><span>1</span></span></span><span class="punctuation definition arguments end python"><span>]</span></span></span><span>.</span><span>c</span><span>reation_counter</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta item-access python"><span>attrs</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>declared_fields</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>]</span></span></span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>OrderedDict</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>current_fields</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>new_class</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>(</span><span class="meta function-call python"><span class="support function builtin python"><span>super</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>DeclarativeFieldsMetaclass</span><span>,&nbsp;</span><span>mcs</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.</span><span class="meta function-call python"><span>_</span><span>_new__</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>mcs</span><span>,&nbsp;</span><span>name</span><span>,&nbsp;</span><span>bases</span><span>,&nbsp;</span><span>attrs</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>)</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Walk&nbsp;through&nbsp;the&nbsp;MRO.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>declared_fields</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>OrderedDict</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control repeat python"><span>for</span></span><span>&nbsp;</span><span>base</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support function builtin python"><span>reversed</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>new_class</span><span>.</span><span>__mro__</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Collect&nbsp;fields&nbsp;from&nbsp;base&nbsp;class.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support function builtin python"><span>hasattr</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>base</span><span>,&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>declared_fields</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span>declared_fields</span><span>.</span><span>update</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>base</span><span>.</span><span>declared_fields</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Field&nbsp;shadowing.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control repeat python"><span>for</span></span><span>&nbsp;</span><span>attr</span><span>,&nbsp;</span><span>value</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="meta function-call python"><span>base</span><span>.</span><span class="support variable magic python"><span>__dict__</span></span><span>.</span><span>items</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>value</span><span>&nbsp;</span><span class="keyword operator logical python"><span>is</span></span><span>&nbsp;</span><span class="constant language python"><span>None</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>and</span></span><span>&nbsp;</span><span>attr</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span>declared_fields</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span>declared_fields</span><span>.</span><span>pop</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>attr</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>new_class</span><span>.</span><span>base_fields</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>declared_fields</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>new_class</span><span>.</span><span>declared_fields</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>declared_fields</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span>new_class</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function decorator python"><span class="entity name function decorator python"><span>@</span><span>python_2_unicode_compatible</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta class python"><span class="storage type class python"><span>class</span></span><span>&nbsp;</span><span class="entity name type class python"><span>BaseForm</span></span><span class="punctuation definition inheritance begin python"><span>(</span></span><span class="meta class inheritance python"><span class="entity other inherited-class python"><span class="support type python"><span>object</span></span></span></span><span class="punctuation definition inheritance end python"><span>)</span></span><span class="punctuation section class begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;This&nbsp;is&nbsp;the&nbsp;main&nbsp;implementation&nbsp;of&nbsp;all&nbsp;the&nbsp;Form&nbsp;logic.&nbsp;Note&nbsp;that&nbsp;this</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;class&nbsp;is&nbsp;different&nbsp;than&nbsp;Form.&nbsp;See&nbsp;the&nbsp;comments&nbsp;by&nbsp;the&nbsp;Form&nbsp;class&nbsp;for&nbsp;more</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;information.&nbsp;Any&nbsp;improvements&nbsp;to&nbsp;the&nbsp;form&nbsp;API&nbsp;should&nbsp;be&nbsp;made&nbsp;to&nbsp;*this*</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;class,&nbsp;not&nbsp;to&nbsp;the&nbsp;Form&nbsp;class.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span class="support function magic python"><span>__init__</span></span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>data</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>None</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>files</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>None</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>auto_id</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>id_</span><span class="constant other placeholder python"><span>%s</span></span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>prefix</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>None</span></span><span class="punctuation separator parameters python"><span>,</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span class="meta function parameters python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable parameter function python"><span>initial</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>None</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>error_class</span></span><span class="keyword operator assignment python"><span>=</span></span><span>ErrorList</span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>label_suffix</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>None</span></span><span class="punctuation separator parameters python"><span>,</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span class="meta function parameters python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable parameter function python"><span>empty_permitted</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>False</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>i</span><span>s_bound</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>data</span><span>&nbsp;</span><span class="keyword operator logical python"><span>is</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="constant language python"><span>None</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>or</span></span><span>&nbsp;</span><span>files</span><span>&nbsp;</span><span class="keyword operator logical python"><span>is</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="constant language python"><span>None</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>d</span><span>ata</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>data</span><span>&nbsp;</span><span class="keyword operator logical python"><span>or</span></span><span>&nbsp;</span><span class="meta structure dictionary python"><span class="punctuation definition dictionary begin python"><span>{</span></span><span class="meta empty-dictionary python"><span class="punctuation definition dictionary end python"><span>}</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>iles</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>files</span><span>&nbsp;</span><span class="keyword operator logical python"><span>or</span></span><span>&nbsp;</span><span class="meta structure dictionary python"><span class="punctuation definition dictionary begin python"><span>{</span></span><span class="meta empty-dictionary python"><span class="punctuation definition dictionary end python"><span>}</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>a</span><span>uto_id</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>auto_id</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>p</span><span>refix</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>prefix</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>i</span><span>nitial</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>initial</span><span>&nbsp;</span><span class="keyword operator logical python"><span>or</span></span><span>&nbsp;</span><span class="meta structure dictionary python"><span class="punctuation definition dictionary begin python"><span>{</span></span><span class="meta empty-dictionary python"><span class="punctuation definition dictionary end python"><span>}</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>e</span><span>rror_class</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>error_class</span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Translators:&nbsp;This&nbsp;is&nbsp;the&nbsp;default&nbsp;suffix&nbsp;added&nbsp;to&nbsp;form&nbsp;field&nbsp;labels</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>l</span><span>abel_suffix</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>label_suffix</span><span>&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>label_suffix</span><span>&nbsp;</span><span class="keyword operator logical python"><span>is</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="constant language python"><span>None</span></span><span>&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>&nbsp;</span><span class="meta function-call python"><span>_</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>:</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>e</span><span>mpty_permitted</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>empty_permitted</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>errors</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="constant language python"><span>None</span></span><span>&nbsp;&nbsp;</span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Stores&nbsp;the&nbsp;errors&nbsp;after&nbsp;clean()&nbsp;has&nbsp;been&nbsp;called.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>changed_data</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="constant language python"><span>None</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;The&nbsp;base_fields&nbsp;class&nbsp;attribute&nbsp;is&nbsp;the&nbsp;*class-wide*&nbsp;definition&nbsp;of</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;fields.&nbsp;Because&nbsp;a&nbsp;particular&nbsp;*instance*&nbsp;of&nbsp;the&nbsp;class&nbsp;might&nbsp;want&nbsp;to</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;alter&nbsp;self.fields,&nbsp;we&nbsp;create&nbsp;self.fields&nbsp;here&nbsp;by&nbsp;copying&nbsp;base_fields.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Instances&nbsp;should&nbsp;always&nbsp;modify&nbsp;self.fields;&nbsp;they&nbsp;should&nbsp;not&nbsp;modify</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;self.base_fields.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ields</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>copy</span><span>.</span><span>deepcopy</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>b</span><span>ase_fields</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>bound_fields_cache</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta structure dictionary python"><span class="punctuation definition dictionary begin python"><span>{</span></span><span class="meta empty-dictionary python"><span class="punctuation definition dictionary end python"><span>}</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span class="support function magic python"><span>__str__</span></span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>as_table</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span class="support function magic python"><span>__repr__</span></span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>errors</span><span>&nbsp;</span><span class="keyword operator logical python"><span>is</span></span><span>&nbsp;</span><span class="constant language python"><span>None</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>is_valid</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="string quoted double single-line python"><span class="punctuation definition string begin python"><span>&quot;</span></span><span>Unknown</span><span class="punctuation definition string end python"><span>&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>is_valid</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>i</span><span>s_bound</span><span>&nbsp;</span><span class="keyword operator logical python"><span>and</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support type python"><span>bool</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>errors</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>&lt;</span><span class="constant other placeholder python"><span>%(cls)s</span></span><span>&nbsp;bound=</span><span class="constant other placeholder python"><span>%(bound)s</span></span><span>,&nbsp;valid=</span><span class="constant other placeholder python"><span>%(valid)s</span></span><span>,&nbsp;fields=(</span><span class="constant other placeholder python"><span>%(fields)s</span></span><span>)&gt;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>%</span></span><span>&nbsp;</span><span class="meta structure dictionary python"><span class="punctuation definition dictionary begin python"><span>{</span></span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="meta structure dictionary python"><span class="meta structure dictionary key python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>cls</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>_class__</span><span>.</span><span class="support variable magic python"><span>__name__</span></span></span><span class="punctuation separator dictionary python"><span>,</span></span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="meta structure dictionary python"><span class="meta structure dictionary key python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>bound</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span class="variable language python"><span>self</span></span><span>.</span><span>i</span><span>s_bound</span></span><span class="punctuation separator dictionary python"><span>,</span></span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="meta structure dictionary python"><span class="meta structure dictionary key python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>valid</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span>is_valid</span></span><span class="punctuation separator dictionary python"><span>,</span></span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="meta structure dictionary python"><span class="meta structure dictionary key python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>fields</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>.</span><span class="meta function-call python"><span>j</span><span>oin</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ields</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation separator dictionary python"><span>,</span></span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="meta structure dictionary python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition dictionary end python"><span>}</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span class="support function magic python"><span>__iter__</span></span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control repeat python"><span>for</span></span><span>&nbsp;</span><span>name</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ields</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>yield</span></span><span>&nbsp;</span><span class="meta item-access python"><span class="variable language python"><span>self</span></span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span>name</span></span><span class="punctuation definition arguments end python"><span>]</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span class="support function magic python"><span>__getitem__</span></span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>name</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double single-line python"><span class="punctuation definition string begin python"><span>&quot;</span></span><span>Returns&nbsp;a&nbsp;BoundField&nbsp;with&nbsp;the&nbsp;given&nbsp;name.</span><span class="punctuation definition string end python"><span>&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control exception python"><span>try</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>field</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta item-access python"><span class="variable language python"><span>self</span></span><span>.</span><span>fields</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span>name</span></span><span class="punctuation definition arguments end python"><span>]</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control exception python"><span>except</span></span><span>&nbsp;</span><span class="support type exception python"><span>KeyError</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control exception python"><span>raise</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support type exception python"><span>KeyError</span></span><span class="punctuation definition arguments begin python"><span>(</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double single-line python"><span class="punctuation definition string begin python"><span>&quot;</span></span><span>Key&nbsp;</span><span class="constant other placeholder python"><span>%r</span></span><span>&nbsp;not&nbsp;found&nbsp;in&nbsp;&#39;</span><span class="constant other placeholder python"><span>%s</span></span><span>&#39;</span><span class="punctuation definition string end python"><span>&quot;</span></span></span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>%</span></span><span>&nbsp;</span><span>(</span><span>name</span><span>,&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>_class__</span><span>.</span><span class="support variable magic python"><span>__name__</span></span><span>)</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>name</span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>bound_fields_cache</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta item-access python"><span class="variable language python"><span>self</span></span><span>.</span><span>_bound_fields_cache</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span>name</span></span><span class="punctuation definition arguments end python"><span>]</span></span></span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>BoundField</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>,&nbsp;</span><span>field</span><span>,&nbsp;</span><span>name</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta item-access python"><span class="variable language python"><span>self</span></span><span>.</span><span>_bound_fields_cache</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span>name</span></span><span class="punctuation definition arguments end python"><span>]</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function decorator python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="entity name function decorator python"><span>@</span><span class="support function builtin python"><span>property</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>errors</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double single-line python"><span class="punctuation definition string begin python"><span>&quot;</span></span><span>Returns&nbsp;an&nbsp;ErrorDict&nbsp;for&nbsp;the&nbsp;data&nbsp;provided&nbsp;for&nbsp;the&nbsp;form</span><span class="punctuation definition string end python"><span>&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>errors</span><span>&nbsp;</span><span class="keyword operator logical python"><span>is</span></span><span>&nbsp;</span><span class="constant language python"><span>None</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>full_clean</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>errors</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>is_valid</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;form&nbsp;has&nbsp;no&nbsp;errors.&nbsp;Otherwise,&nbsp;False.&nbsp;If&nbsp;errors&nbsp;are</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;being&nbsp;ignored,&nbsp;returns&nbsp;False.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>i</span><span>s_bound</span><span>&nbsp;</span><span class="keyword operator logical python"><span>and</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>e</span><span>rrors</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>add_prefix</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>field_name</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns&nbsp;the&nbsp;field&nbsp;name&nbsp;with&nbsp;a&nbsp;prefix&nbsp;appended,&nbsp;if&nbsp;this&nbsp;Form&nbsp;has&nbsp;a</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;prefix&nbsp;set.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subclasses&nbsp;may&nbsp;wish&nbsp;to&nbsp;override.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="constant other placeholder python"><span>%s</span></span><span>-</span><span class="constant other placeholder python"><span>%s</span></span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>%</span></span><span>&nbsp;</span><span>(</span><span class="variable language python"><span>self</span></span><span>.</span><span>p</span><span>refix</span><span>,&nbsp;</span><span>field_name</span><span>)</span><span>&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>p</span><span>refix</span><span>&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>&nbsp;</span><span>field_name</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>add_initial_prefix</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>field_name</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Add&nbsp;a&nbsp;&#39;initial&#39;&nbsp;prefix&nbsp;for&nbsp;checking&nbsp;dynamic&nbsp;initial&nbsp;values</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>initial-</span><span class="constant other placeholder python"><span>%s</span></span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>%</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>add_prefix</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>field_name</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>_html_output</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>normal_row</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>error_row</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>row_ender</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>help_text_html</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>errors_on_separate_row</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double single-line python"><span class="punctuation definition string begin python"><span>&quot;</span></span><span>Helper&nbsp;function&nbsp;for&nbsp;outputting&nbsp;HTML.&nbsp;Used&nbsp;by&nbsp;as_table(),&nbsp;as_ul(),&nbsp;as_p().</span><span class="punctuation definition string end python"><span>&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>top_errors</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>non_field_errors</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>&nbsp;&nbsp;</span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Errors&nbsp;that&nbsp;should&nbsp;be&nbsp;displayed&nbsp;above&nbsp;all&nbsp;fields.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>output</span><span>,&nbsp;</span><span>hidden_fields</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta structure list python"><span class="punctuation definition list begin python"><span>[</span></span><span class="punctuation definition list end python"><span>]</span></span></span><span>,&nbsp;</span><span class="meta structure list python"><span class="punctuation definition list begin python"><span>[</span></span><span class="punctuation definition list end python"><span>]</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control repeat python"><span>for</span></span><span>&nbsp;</span><span>name</span><span>,&nbsp;</span><span>field</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>fields</span><span>.</span><span>items</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>html_class_attr</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="punctuation definition string end python"><span class="meta empty-string single python"><span>&#39;</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>bf</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta item-access python"><span class="variable language python"><span>self</span></span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span>name</span></span><span class="punctuation definition arguments end python"><span>]</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Escape&nbsp;and&nbsp;cache&nbsp;in&nbsp;local&nbsp;variable.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>bf_errors</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>error_class</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="meta structure list python"><span class="punctuation definition list begin python"><span>[</span></span><span class="meta structure list item python"><span class="meta function-call python"><span>conditional_escape</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>error</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>&nbsp;</span><span class="keyword control repeat python"><span>for</span></span><span>&nbsp;</span><span>error</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span>bf</span><span>.</span><span>errors</span></span><span class="punctuation definition list end python"><span>]</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>bf</span><span>.</span><span>is_hidden</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>bf_errors</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span>top_errors</span><span>.</span><span>extend</span><span class="punctuation definition arguments begin python"><span>(</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta structure list python"><span class="punctuation definition list begin python"><span>[</span></span><span class="meta structure list item python"><span class="meta function-call python"><span>_</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>(Hidden&nbsp;field&nbsp;</span><span class="constant other placeholder python"><span>%(name)s</span></span><span>)&nbsp;</span><span class="constant other placeholder python"><span>%(error)s</span></span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>%</span></span><span>&nbsp;</span><span class="meta structure dictionary python"><span class="punctuation definition dictionary begin python"><span>{</span></span><span class="meta structure dictionary key python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>name</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span>name</span></span><span class="punctuation separator dictionary python"><span>,</span></span><span>&nbsp;</span><span class="meta structure dictionary key python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>error</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span class="meta function-call python"><span>force_text</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>e</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation definition dictionary end python"><span>}</span></span></span></span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span class="meta structure list python"><span class="meta structure list item python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control repeat python"><span>for</span></span><span>&nbsp;</span><span>e</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span>bf_errors</span></span><span class="punctuation definition list end python"><span>]</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span>hidden_fields</span><span>.</span><span>append</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="meta function-call python"><span>six</span><span>.</span><span>text_type</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>bf</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Create&nbsp;a&nbsp;&#39;class=&quot;...&quot;&#39;&nbsp;attribute&nbsp;if&nbsp;the&nbsp;row&nbsp;should&nbsp;have&nbsp;any</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;CSS&nbsp;classes&nbsp;applied.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>css_classes</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>bf</span><span>.</span><span>css_classes</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>css_classes</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>html_class_attr</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>&nbsp;class=&quot;</span><span class="constant other placeholder python"><span>%s</span></span><span>&quot;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>%</span></span><span>&nbsp;</span><span>css_classes</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>errors_on_separate_row</span><span>&nbsp;</span><span class="keyword operator logical python"><span>and</span></span><span>&nbsp;</span><span>bf_errors</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span>output</span><span>.</span><span>append</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>error_row</span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>%</span></span><span>&nbsp;</span><span class="meta function-call python"><span>force_text</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>bf_errors</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>bf</span><span>.</span><span>label</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>label</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>conditional_escape</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="meta function-call python"><span>force_text</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>bf</span><span>.</span><span>label</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>label</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>bf</span><span>.</span><span>label_tag</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>label</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>or</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="punctuation definition string end python"><span class="meta empty-string single python"><span>&#39;</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>label</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="punctuation definition string end python"><span class="meta empty-string single python"><span>&#39;</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>field</span><span>.</span><span>help_text</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>help_text</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>help_text_html</span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>%</span></span><span>&nbsp;</span><span class="meta function-call python"><span>force_text</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>field</span><span>.</span><span>help_text</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>help_text</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="punctuation definition string end python"><span class="meta empty-string single python"><span>&#39;</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span>output</span><span>.</span><span>append</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>normal_row</span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>%</span></span><span>&nbsp;</span><span class="meta structure dictionary python"><span class="punctuation definition dictionary begin python"><span>{</span></span><span>&nbsp;</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span class="meta structure dictionary python"><span class="meta structure dictionary key python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>errors</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span class="meta function-call python"><span>force_text</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>bf_errors</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation separator dictionary python"><span>,</span></span><span>&nbsp;</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span class="meta structure dictionary python"><span class="meta structure dictionary key python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>label</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span class="meta function-call python"><span>force_text</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>label</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation separator dictionary python"><span>,</span></span><span>&nbsp;</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span class="meta structure dictionary python"><span class="meta structure dictionary key python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>field</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span class="meta function-call python"><span>six</span><span>.</span><span>text_type</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>bf</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation separator dictionary python"><span>,</span></span><span>&nbsp;</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span class="meta structure dictionary python"><span class="meta structure dictionary key python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>help_text</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span>help_text</span></span><span class="punctuation separator dictionary python"><span>,</span></span><span>&nbsp;</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span class="meta structure dictionary python"><span class="meta structure dictionary key python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>html_class_attr</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span>html_class_attr</span></span><span class="punctuation separator dictionary python"><span>,</span></span><span>&nbsp;</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span class="meta structure dictionary python"><span class="meta structure dictionary key python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>field_name</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span>bf</span><span>.</span><span>html_name</span></span><span class="punctuation separator dictionary python"><span>,</span></span><span>&nbsp;</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span class="meta structure dictionary python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition dictionary end python"><span>}</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>top_errors</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span>output</span><span>.</span><span>insert</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="constant numeric integer decimal python"><span>0</span></span><span>,&nbsp;</span><span>error_row</span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>%</span></span><span>&nbsp;</span><span class="meta function-call python"><span>force_text</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>top_errors</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>hidden_fields</span><span>:&nbsp;&nbsp;</span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Insert&nbsp;any&nbsp;hidden&nbsp;fields&nbsp;in&nbsp;the&nbsp;last&nbsp;row.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>str_hidden</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="punctuation definition string end python"><span class="meta empty-string single python"><span>&#39;</span></span></span></span><span>.</span><span class="meta function-call python"><span>j</span><span>oin</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>hidden_fields</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>output</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>last_row</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta item-access python"><span>output</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span class="keyword operator arithmetic python"><span>-</span></span><span class="constant numeric integer decimal python"><span>1</span></span></span><span class="punctuation definition arguments end python"><span>]</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Chop&nbsp;off&nbsp;the&nbsp;trailing&nbsp;row_ender&nbsp;(e.g.&nbsp;&#39;&lt;/td&gt;&lt;/tr&gt;&#39;)&nbsp;and</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;insert&nbsp;the&nbsp;hidden&nbsp;fields.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="meta function-call python"><span>last_row</span><span>.</span><span>endswith</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>row_ender</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;This&nbsp;can&nbsp;happen&nbsp;in&nbsp;the&nbsp;as_p()&nbsp;case&nbsp;(and&nbsp;possibly&nbsp;others</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;that&nbsp;users&nbsp;write):&nbsp;if&nbsp;there&nbsp;are&nbsp;only&nbsp;top&nbsp;errors,&nbsp;we&nbsp;may</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;not&nbsp;be&nbsp;able&nbsp;to&nbsp;conscript&nbsp;the&nbsp;last&nbsp;row&nbsp;for&nbsp;our&nbsp;purposes,</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;so&nbsp;insert&nbsp;a&nbsp;new,&nbsp;empty&nbsp;row.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>last_row</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>(</span><span>normal_row</span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>%</span></span><span>&nbsp;</span><span class="meta structure dictionary python"><span class="punctuation definition dictionary begin python"><span>{</span></span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="meta structure dictionary python"><span class="meta structure dictionary key python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>errors</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="punctuation definition string end python"><span class="meta empty-string single python"><span>&#39;</span></span></span></span></span><span class="punctuation separator dictionary python"><span>,</span></span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="meta structure dictionary python"><span class="meta structure dictionary key python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>label</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="punctuation definition string end python"><span class="meta empty-string single python"><span>&#39;</span></span></span></span></span><span class="punctuation separator dictionary python"><span>,</span></span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="meta structure dictionary python"><span class="meta structure dictionary key python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>field</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="punctuation definition string end python"><span class="meta empty-string single python"><span>&#39;</span></span></span></span></span><span class="punctuation separator dictionary python"><span>,</span></span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="meta structure dictionary python"><span class="meta structure dictionary key python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>help_text</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="punctuation definition string end python"><span class="meta empty-string single python"><span>&#39;</span></span></span></span></span><span class="punctuation separator dictionary python"><span>,</span></span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="meta structure dictionary python"><span class="meta structure dictionary key python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>html_class_attr</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span>html_class_attr</span></span><span class="punctuation separator dictionary python"><span>,</span></span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="meta structure dictionary python"><span class="meta structure dictionary key python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>field_name</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="punctuation definition string end python"><span class="meta empty-string single python"><span>&#39;</span></span></span></span></span><span class="punctuation separator dictionary python"><span>,</span></span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="meta structure dictionary python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition dictionary end python"><span>}</span></span></span><span>)</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span>output</span><span>.</span><span>append</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>last_row</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta item-access python"><span>output</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span class="keyword operator arithmetic python"><span>-</span></span><span class="constant numeric integer decimal python"><span>1</span></span></span><span class="punctuation definition arguments end python"><span>]</span></span></span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta item-access python"><span>last_row</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span>:</span><span class="keyword operator arithmetic python"><span>-</span></span><span class="meta function-call python"><span class="support function builtin python"><span>len</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>row_ender</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation definition arguments end python"><span>]</span></span></span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>+</span></span><span>&nbsp;</span><span>str_hidden</span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>+</span></span><span>&nbsp;</span><span>row_ender</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;If&nbsp;there&nbsp;aren&#39;t&nbsp;any&nbsp;rows&nbsp;in&nbsp;the&nbsp;output,&nbsp;just&nbsp;append&nbsp;the</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;hidden&nbsp;fields.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span>output</span><span>.</span><span>append</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>str_hidden</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span>mark_safe</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="constant character escape linefeed python"><span>\n</span></span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>.</span><span class="meta function-call python"><span>j</span><span>oin</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>output</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>as_table</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double single-line python"><span class="punctuation definition string begin python"><span>&quot;</span></span><span>Returns&nbsp;this&nbsp;form&nbsp;rendered&nbsp;as&nbsp;HTML&nbsp;&lt;tr&gt;s&nbsp;--&nbsp;excluding&nbsp;the&nbsp;&lt;table&gt;&lt;/table&gt;.</span><span class="punctuation definition string end python"><span>&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>_html_output</span><span class="punctuation definition arguments begin python"><span>(</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable parameter function python"><span>normal_row</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>&lt;tr</span><span class="constant other placeholder python"><span>%(html_class_attr)s</span></span><span>&gt;&lt;th&gt;</span><span class="constant other placeholder python"><span>%(label)s</span></span><span>&lt;/th&gt;&lt;td&gt;</span><span class="constant other placeholder python"><span>%(errors)s</span><span>%(field)s</span><span>%(help_text)s</span></span><span>&lt;/td&gt;&lt;/tr&gt;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span class="punctuation separator parameters python"><span>,</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable parameter function python"><span>error_row</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>&lt;tr&gt;&lt;td&nbsp;colspan=&quot;2&quot;&gt;</span><span class="constant other placeholder python"><span>%s</span></span><span>&lt;/td&gt;&lt;/tr&gt;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span class="punctuation separator parameters python"><span>,</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable parameter function python"><span>row_ender</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>&lt;/td&gt;&lt;/tr&gt;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span class="punctuation separator parameters python"><span>,</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable parameter function python"><span>help_text_html</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>&lt;br&nbsp;/&gt;&lt;span&nbsp;class=&quot;helptext&quot;&gt;</span><span class="constant other placeholder python"><span>%s</span></span><span>&lt;/span&gt;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span class="punctuation separator parameters python"><span>,</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable parameter function python"><span>errors_on_separate_row</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>False</span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>as_ul</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double single-line python"><span class="punctuation definition string begin python"><span>&quot;</span></span><span>Returns&nbsp;this&nbsp;form&nbsp;rendered&nbsp;as&nbsp;HTML&nbsp;&lt;li&gt;s&nbsp;--&nbsp;excluding&nbsp;the&nbsp;&lt;ul&gt;&lt;/ul&gt;.</span><span class="punctuation definition string end python"><span>&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>_html_output</span><span class="punctuation definition arguments begin python"><span>(</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable parameter function python"><span>normal_row</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>&lt;li</span><span class="constant other placeholder python"><span>%(html_class_attr)s</span></span><span>&gt;</span><span class="constant other placeholder python"><span>%(errors)s</span><span>%(label)s</span></span><span>&nbsp;</span><span class="constant other placeholder python"><span>%(field)s</span><span>%(help_text)s</span></span><span>&lt;/li&gt;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span class="punctuation separator parameters python"><span>,</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable parameter function python"><span>error_row</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>&lt;li&gt;</span><span class="constant other placeholder python"><span>%s</span></span><span>&lt;/li&gt;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span class="punctuation separator parameters python"><span>,</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable parameter function python"><span>row_ender</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>&lt;/li&gt;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span class="punctuation separator parameters python"><span>,</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable parameter function python"><span>help_text_html</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>&nbsp;&lt;span&nbsp;class=&quot;helptext&quot;&gt;</span><span class="constant other placeholder python"><span>%s</span></span><span>&lt;/span&gt;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span class="punctuation separator parameters python"><span>,</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable parameter function python"><span>errors_on_separate_row</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>False</span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>as_p</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double single-line python"><span class="punctuation definition string begin python"><span>&quot;</span></span><span>Returns&nbsp;this&nbsp;form&nbsp;rendered&nbsp;as&nbsp;HTML&nbsp;&lt;p&gt;s.</span><span class="punctuation definition string end python"><span>&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>_html_output</span><span class="punctuation definition arguments begin python"><span>(</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable parameter function python"><span>normal_row</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>&lt;p</span><span class="constant other placeholder python"><span>%(html_class_attr)s</span></span><span>&gt;</span><span class="constant other placeholder python"><span>%(label)s</span></span><span>&nbsp;</span><span class="constant other placeholder python"><span>%(field)s</span><span>%(help_text)s</span></span><span>&lt;/p&gt;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span class="punctuation separator parameters python"><span>,</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable parameter function python"><span>error_row</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="constant other placeholder python"><span>%s</span></span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span class="punctuation separator parameters python"><span>,</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable parameter function python"><span>row_ender</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>&lt;/p&gt;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span class="punctuation separator parameters python"><span>,</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable parameter function python"><span>help_text_html</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>&nbsp;&lt;span&nbsp;class=&quot;helptext&quot;&gt;</span><span class="constant other placeholder python"><span>%s</span></span><span>&lt;/span&gt;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span class="punctuation separator parameters python"><span>,</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable parameter function python"><span>errors_on_separate_row</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>True</span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>non_field_errors</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns&nbsp;an&nbsp;ErrorList&nbsp;of&nbsp;errors&nbsp;that&nbsp;aren&#39;t&nbsp;associated&nbsp;with&nbsp;a&nbsp;particular</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;field&nbsp;--&nbsp;i.e.,&nbsp;from&nbsp;Form.clean().&nbsp;Returns&nbsp;an&nbsp;empty&nbsp;ErrorList&nbsp;if&nbsp;there</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;are&nbsp;none.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>errors</span><span>.</span><span>get</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>NON_FIELD_ERRORS</span><span>,&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>error_class</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable parameter function python"><span>error_class</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>nonfield</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>_raw_value</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>fieldname</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns&nbsp;the&nbsp;raw_value&nbsp;for&nbsp;a&nbsp;particular&nbsp;field&nbsp;name.&nbsp;This&nbsp;is&nbsp;just&nbsp;a</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;convenient&nbsp;wrapper&nbsp;around&nbsp;widget.value_from_datadict.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>field</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta item-access python"><span class="variable language python"><span>self</span></span><span>.</span><span>fields</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span>fieldname</span></span><span class="punctuation definition arguments end python"><span>]</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>prefix</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>add_prefix</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>fieldname</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span>field</span><span>.</span><span>widget</span><span>.</span><span>value_from_datadict</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>d</span><span>ata</span><span>,&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>iles</span><span>,&nbsp;</span><span>prefix</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>add_error</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>field</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>error</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Update&nbsp;the&nbsp;content&nbsp;of&nbsp;`self._errors`.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;`field`&nbsp;argument&nbsp;is&nbsp;the&nbsp;name&nbsp;of&nbsp;the&nbsp;field&nbsp;to&nbsp;which&nbsp;the&nbsp;errors</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;should&nbsp;be&nbsp;added.&nbsp;If&nbsp;its&nbsp;value&nbsp;is&nbsp;None&nbsp;the&nbsp;errors&nbsp;will&nbsp;be&nbsp;treated&nbsp;as</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NON_FIELD_ERRORS.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;`error`&nbsp;argument&nbsp;can&nbsp;be&nbsp;a&nbsp;single&nbsp;error,&nbsp;a&nbsp;list&nbsp;of&nbsp;errors,&nbsp;or&nbsp;a</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dictionary&nbsp;that&nbsp;maps&nbsp;field&nbsp;names&nbsp;to&nbsp;lists&nbsp;of&nbsp;errors.&nbsp;What&nbsp;we&nbsp;define&nbsp;as</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;an&nbsp;&quot;error&quot;&nbsp;can&nbsp;be&nbsp;either&nbsp;a&nbsp;simple&nbsp;string&nbsp;or&nbsp;an&nbsp;instance&nbsp;of</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ValidationError&nbsp;with&nbsp;its&nbsp;message&nbsp;attribute&nbsp;set&nbsp;and&nbsp;what&nbsp;we&nbsp;define&nbsp;as</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list&nbsp;or&nbsp;dictionary&nbsp;can&nbsp;be&nbsp;an&nbsp;actual&nbsp;`list`&nbsp;or&nbsp;`dict`&nbsp;or&nbsp;an&nbsp;instance</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;ValidationError&nbsp;with&nbsp;its&nbsp;`error_list`&nbsp;or&nbsp;`error_dict`&nbsp;attribute&nbsp;set.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;`error`&nbsp;is&nbsp;a&nbsp;dictionary,&nbsp;the&nbsp;`field`&nbsp;argument&nbsp;*must*&nbsp;be&nbsp;None&nbsp;and</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;errors&nbsp;will&nbsp;be&nbsp;added&nbsp;to&nbsp;the&nbsp;fields&nbsp;that&nbsp;correspond&nbsp;to&nbsp;the&nbsp;keys&nbsp;of&nbsp;the</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dictionary.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support function builtin python"><span>isinstance</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>error</span><span>,&nbsp;</span><span>ValidationError</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Normalize&nbsp;to&nbsp;ValidationError&nbsp;and&nbsp;let&nbsp;its&nbsp;constructor</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;do&nbsp;the&nbsp;hard&nbsp;work&nbsp;of&nbsp;making&nbsp;sense&nbsp;of&nbsp;the&nbsp;input.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>error</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>ValidationError</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>error</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support function builtin python"><span>hasattr</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>error</span><span>,&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>error_dict</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>field</span><span>&nbsp;</span><span class="keyword operator logical python"><span>is</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="constant language python"><span>None</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control exception python"><span>raise</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support type exception python"><span>TypeError</span></span><span class="punctuation definition arguments begin python"><span>(</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double single-line python"><span class="punctuation definition string begin python"><span>&quot;</span></span><span>The&nbsp;argument&nbsp;`field`&nbsp;must&nbsp;be&nbsp;`None`&nbsp;when&nbsp;the&nbsp;`error`&nbsp;</span><span class="punctuation definition string end python"><span>&quot;</span></span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double single-line python"><span class="punctuation definition string begin python"><span>&quot;</span></span><span>argument&nbsp;contains&nbsp;errors&nbsp;for&nbsp;multiple&nbsp;fields.</span><span class="punctuation definition string end python"><span>&quot;</span></span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>error</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>error</span><span>.</span><span>error_dict</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>error</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta structure dictionary python"><span class="punctuation definition dictionary begin python"><span>{</span></span><span class="meta structure dictionary key python"><span>field</span><span>&nbsp;</span><span class="keyword operator logical python"><span>or</span></span><span>&nbsp;</span><span>NON_FIELD_ERRORS</span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span>error</span><span>.</span><span>error_list</span></span><span class="punctuation definition dictionary end python"><span>}</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control repeat python"><span>for</span></span><span>&nbsp;</span><span>field</span><span>,&nbsp;</span><span>error_list</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="meta function-call python"><span>error</span><span>.</span><span>items</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>field</span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>e</span><span>rrors</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>field</span><span>&nbsp;</span><span class="keyword operator comparison python"><span>!=</span></span><span>&nbsp;</span><span>NON_FIELD_ERRORS</span><span>&nbsp;</span><span class="keyword operator logical python"><span>and</span></span><span>&nbsp;</span><span>field</span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ields</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control exception python"><span>raise</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support type exception python"><span>ValueError</span></span><span class="punctuation definition arguments begin python"><span>(</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double single-line python"><span class="punctuation definition string begin python"><span>&quot;</span></span><span>&#39;</span><span class="constant other placeholder python"><span>%s</span></span><span>&#39;&nbsp;has&nbsp;no&nbsp;field&nbsp;named&nbsp;&#39;</span><span class="constant other placeholder python"><span>%s</span></span><span>&#39;.</span><span class="punctuation definition string end python"><span>&quot;</span></span></span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>%</span></span><span>&nbsp;</span><span>(</span><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>_class__</span><span>.</span><span class="support variable magic python"><span>__name__</span></span><span>,&nbsp;</span><span>field</span><span>)</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>field</span><span>&nbsp;</span><span class="keyword operator comparison python"><span>==</span></span><span>&nbsp;</span><span>NON_FIELD_ERRORS</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta item-access python"><span class="variable language python"><span>self</span></span><span>.</span><span>_errors</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span>field</span></span><span class="punctuation definition arguments end python"><span>]</span></span></span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>error_class</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable parameter function python"><span>error_class</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>nonfield</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta item-access python"><span class="variable language python"><span>self</span></span><span>.</span><span>_errors</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span>field</span></span><span class="punctuation definition arguments end python"><span>]</span></span></span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>error_class</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta item-access python"><span class="variable language python"><span>self</span></span><span>.</span><span>_errors</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span>field</span></span><span class="punctuation definition arguments end python"><span>]</span></span></span><span>.</span><span class="meta function-call python"><span>e</span><span>xtend</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>error_list</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>field</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>c</span><span>leaned_data</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword other python"><span>del</span></span><span>&nbsp;</span><span class="meta item-access python"><span class="variable language python"><span>self</span></span><span>.</span><span>cleaned_data</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span>field</span></span><span class="punctuation definition arguments end python"><span>]</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>has_error</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>field</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>code</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>None</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>code</span><span>&nbsp;</span><span class="keyword operator logical python"><span>is</span></span><span>&nbsp;</span><span class="constant language python"><span>None</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span>field</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>e</span><span>rrors</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>field</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>e</span><span>rrors</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control repeat python"><span>for</span></span><span>&nbsp;</span><span>error</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>errors</span><span>.</span><span>as_data</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span class="meta item-access python"><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span>field</span></span><span class="punctuation definition arguments end python"><span>]</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>error</span><span>.</span><span>code</span><span>&nbsp;</span><span class="keyword operator comparison python"><span>==</span></span><span>&nbsp;</span><span>code</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="constant language python"><span>True</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="constant language python"><span>False</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>full_clean</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cleans&nbsp;all&nbsp;of&nbsp;self.data&nbsp;and&nbsp;populates&nbsp;self._errors&nbsp;and</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.cleaned_data.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>errors</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>ErrorDict</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>i</span><span>s_bound</span><span>:&nbsp;&nbsp;</span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Stop&nbsp;further&nbsp;processing.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>c</span><span>leaned_data</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta structure dictionary python"><span class="punctuation definition dictionary begin python"><span>{</span></span><span class="meta empty-dictionary python"><span class="punctuation definition dictionary end python"><span>}</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;If&nbsp;the&nbsp;form&nbsp;is&nbsp;permitted&nbsp;to&nbsp;be&nbsp;empty,&nbsp;and&nbsp;none&nbsp;of&nbsp;the&nbsp;form&nbsp;data&nbsp;has</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;changed&nbsp;from&nbsp;the&nbsp;initial&nbsp;data,&nbsp;short&nbsp;circuit&nbsp;any&nbsp;validation.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>e</span><span>mpty_permitted</span><span>&nbsp;</span><span class="keyword operator logical python"><span>and</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>has_changed</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>_clean_fields</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>_clean_form</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>_post_clean</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>_clean_fields</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control repeat python"><span>for</span></span><span>&nbsp;</span><span>name</span><span>,&nbsp;</span><span>field</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>fields</span><span>.</span><span>items</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;value_from_datadict()&nbsp;gets&nbsp;the&nbsp;data&nbsp;from&nbsp;the&nbsp;data&nbsp;dictionaries.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Each&nbsp;widget&nbsp;type&nbsp;knows&nbsp;how&nbsp;to&nbsp;retrieve&nbsp;its&nbsp;own&nbsp;data,&nbsp;because&nbsp;some</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;widgets&nbsp;split&nbsp;data&nbsp;over&nbsp;several&nbsp;HTML&nbsp;fields.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>value</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>field</span><span>.</span><span>widget</span><span>.</span><span>value_from_datadict</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>d</span><span>ata</span><span>,&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>iles</span><span>,&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>add_prefix</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>name</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control exception python"><span>try</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support function builtin python"><span>isinstance</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>field</span><span>,&nbsp;</span><span>FileField</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>initial</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>initial</span><span>.</span><span>get</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>name</span><span>,&nbsp;</span><span>field</span><span>.</span><span>initial</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>value</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>field</span><span>.</span><span>clean</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>value</span><span>,&nbsp;</span><span>initial</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>value</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>field</span><span>.</span><span>clean</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>value</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta item-access python"><span class="variable language python"><span>self</span></span><span>.</span><span>cleaned_data</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span>name</span></span><span class="punctuation definition arguments end python"><span>]</span></span></span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>value</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support function builtin python"><span>hasattr</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>,&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>clean_</span><span class="constant other placeholder python"><span>%s</span></span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>%</span></span><span>&nbsp;</span><span>name</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>value</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support function builtin python"><span>getattr</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>,&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>clean_</span><span class="constant other placeholder python"><span>%s</span></span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>%</span></span><span>&nbsp;</span><span>name</span></span><span class="punctuation definition arguments end python"><span>)</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta item-access python"><span class="variable language python"><span>self</span></span><span>.</span><span>cleaned_data</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span>name</span></span><span class="punctuation definition arguments end python"><span>]</span></span></span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>value</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control exception python"><span>except</span></span><span>&nbsp;</span><span>ValidationError</span><span>&nbsp;</span><span class="keyword other python"><span>as</span></span><span>&nbsp;</span><span>e</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>add_error</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>name</span><span>,&nbsp;</span><span>e</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>_clean_form</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control exception python"><span>try</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>cleaned_data</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>clean</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control exception python"><span>except</span></span><span>&nbsp;</span><span>ValidationError</span><span>&nbsp;</span><span class="keyword other python"><span>as</span></span><span>&nbsp;</span><span>e</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>add_error</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="constant language python"><span>None</span></span><span>,&nbsp;</span><span>e</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>cleaned_data</span><span>&nbsp;</span><span class="keyword operator logical python"><span>is</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="constant language python"><span>None</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>c</span><span>leaned_data</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>cleaned_data</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>_post_clean</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;An&nbsp;internal&nbsp;hook&nbsp;for&nbsp;performing&nbsp;additional&nbsp;cleaning&nbsp;after&nbsp;form&nbsp;cleaning</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;complete.&nbsp;Used&nbsp;for&nbsp;model&nbsp;validation&nbsp;in&nbsp;model&nbsp;forms.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>pass</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>clean</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hook&nbsp;for&nbsp;doing&nbsp;any&nbsp;extra&nbsp;form-wide&nbsp;cleaning&nbsp;after&nbsp;Field.clean()&nbsp;has&nbsp;been</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;called&nbsp;on&nbsp;every&nbsp;field.&nbsp;Any&nbsp;ValidationError&nbsp;raised&nbsp;by&nbsp;this&nbsp;method&nbsp;will</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;not&nbsp;be&nbsp;associated&nbsp;with&nbsp;a&nbsp;particular&nbsp;field;&nbsp;it&nbsp;will&nbsp;have&nbsp;a&nbsp;special-case</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;association&nbsp;with&nbsp;the&nbsp;field&nbsp;named&nbsp;&#39;__all__&#39;.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>c</span><span>leaned_data</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>has_changed</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;data&nbsp;differs&nbsp;from&nbsp;initial.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support type python"><span>bool</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>c</span><span>hanged_data</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function decorator python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="entity name function decorator python"><span>@</span><span class="support function builtin python"><span>property</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>changed_data</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>changed_data</span><span>&nbsp;</span><span class="keyword operator logical python"><span>is</span></span><span>&nbsp;</span><span class="constant language python"><span>None</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>changed_data</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta structure list python"><span class="punctuation definition list begin python"><span>[</span></span><span class="punctuation definition list end python"><span>]</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;</span><span class="storage type class xxx"><span>XXX</span></span><span>:&nbsp;For&nbsp;now&nbsp;we&#39;re&nbsp;asking&nbsp;the&nbsp;individual&nbsp;fields&nbsp;whether&nbsp;or&nbsp;not&nbsp;the</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;data&nbsp;has&nbsp;changed.&nbsp;It&nbsp;would&nbsp;probably&nbsp;be&nbsp;more&nbsp;efficient&nbsp;to&nbsp;hash&nbsp;the</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;initial&nbsp;data,&nbsp;store&nbsp;it&nbsp;in&nbsp;a&nbsp;hidden&nbsp;field,&nbsp;and&nbsp;compare&nbsp;a&nbsp;hash&nbsp;of&nbsp;the</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;submitted&nbsp;data,&nbsp;but&nbsp;we&#39;d&nbsp;need&nbsp;a&nbsp;way&nbsp;to&nbsp;easily&nbsp;get&nbsp;the&nbsp;string&nbsp;value</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;for&nbsp;a&nbsp;given&nbsp;field.&nbsp;Right&nbsp;now,&nbsp;that&nbsp;logic&nbsp;is&nbsp;embedded&nbsp;in&nbsp;the&nbsp;render</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;method&nbsp;of&nbsp;each&nbsp;widget.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control repeat python"><span>for</span></span><span>&nbsp;</span><span>name</span><span>,&nbsp;</span><span>field</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>fields</span><span>.</span><span>items</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>prefixed_name</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>add_prefix</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>name</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>data_value</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>field</span><span>.</span><span>widget</span><span>.</span><span>value_from_datadict</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>d</span><span>ata</span><span>,&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>iles</span><span>,&nbsp;</span><span>prefixed_name</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span>field</span><span>.</span><span>show_hidden_initial</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>initial_value</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>initial</span><span>.</span><span>get</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>name</span><span>,&nbsp;</span><span>field</span><span>.</span><span>initial</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support function builtin python"><span>callable</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>initial_value</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>initial_value</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>initial_value</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>initial_prefixed_name</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>add_initial_prefix</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>name</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>hidden_widget</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>field</span><span>.</span><span>hidden_widget</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control exception python"><span>try</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>initial_value</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>field</span><span>.</span><span>to_python</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="meta function-call python"><span>hidden_widget</span><span>.</span><span>value_from_datadict</span><span class="punctuation definition arguments begin python"><span>(</span></span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>d</span><span>ata</span><span>,&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>iles</span><span>,&nbsp;</span><span>initial_prefixed_name</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control exception python"><span>except</span></span><span>&nbsp;</span><span>ValidationError</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Always&nbsp;assume&nbsp;data&nbsp;has&nbsp;changed&nbsp;if&nbsp;validation&nbsp;fails.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>_changed_data</span><span>.</span><span>append</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>name</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>continue</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="meta function-call python"><span>field</span><span>.</span><span>has_changed</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>initial_value</span><span>,&nbsp;</span><span>data_value</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>_changed_data</span><span>.</span><span>append</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>name</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>changed_data</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function decorator python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="entity name function decorator python"><span>@</span><span class="support function builtin python"><span>property</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>media</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Provide&nbsp;a&nbsp;description&nbsp;of&nbsp;all&nbsp;media&nbsp;required&nbsp;to&nbsp;render&nbsp;the&nbsp;widgets&nbsp;on&nbsp;this&nbsp;form</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>media</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>Media</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control repeat python"><span>for</span></span><span>&nbsp;</span><span>field</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>fields</span><span>.</span><span>values</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>media</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>media</span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>+</span></span><span>&nbsp;</span><span>field</span><span>.</span><span>widget</span><span>.</span><span>media</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span>media</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>is_multipart</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns&nbsp;True&nbsp;if&nbsp;the&nbsp;form&nbsp;needs&nbsp;to&nbsp;be&nbsp;multipart-encoded,&nbsp;i.e.&nbsp;it&nbsp;has</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FileInput.&nbsp;Otherwise,&nbsp;False.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control repeat python"><span>for</span></span><span>&nbsp;</span><span>field</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>fields</span><span>.</span><span>values</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>field</span><span>.</span><span>widget</span><span>.</span><span>needs_multipart_form</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="constant language python"><span>True</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="constant language python"><span>False</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>hidden_fields</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns&nbsp;a&nbsp;list&nbsp;of&nbsp;all&nbsp;the&nbsp;BoundField&nbsp;objects&nbsp;that&nbsp;are&nbsp;hidden&nbsp;fields.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Useful&nbsp;for&nbsp;manual&nbsp;form&nbsp;layout&nbsp;in&nbsp;templates.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta structure list python"><span class="punctuation definition list begin python"><span>[</span></span><span class="meta structure list item python"><span>field</span><span>&nbsp;</span><span class="keyword control repeat python"><span>for</span></span><span>&nbsp;</span><span>field</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>field</span><span>.</span><span>is_hidden</span></span><span class="punctuation definition list end python"><span>]</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>visible_fields</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns&nbsp;a&nbsp;list&nbsp;of&nbsp;BoundField&nbsp;objects&nbsp;that&nbsp;aren&#39;t&nbsp;hidden&nbsp;fields.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The&nbsp;opposite&nbsp;of&nbsp;the&nbsp;hidden_fields()&nbsp;method.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta structure list python"><span class="punctuation definition list begin python"><span>[</span></span><span class="meta structure list item python"><span>field</span><span>&nbsp;</span><span class="keyword control repeat python"><span>for</span></span><span>&nbsp;</span><span>field</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span>field</span><span>.</span><span>is_hidden</span></span><span class="punctuation definition list end python"><span>]</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta class python"><span class="storage type class python"><span>class</span></span><span>&nbsp;</span><span class="entity name type class python"><span>Form</span></span><span class="punctuation definition inheritance begin python"><span>(</span></span><span class="meta class inheritance python"><span class="entity other inherited-class python"><span class="meta function-call python"><span>six</span><span>.</span><span>with_metaclass</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>DeclarativeFieldsMetaclass</span><span>,&nbsp;</span><span>BaseForm</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></span><span class="punctuation definition inheritance end python"><span>)</span></span><span class="punctuation section class begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double single-line python"><span class="punctuation definition string begin python"><span>&quot;</span></span><span>A&nbsp;collection&nbsp;of&nbsp;Fields,&nbsp;plus&nbsp;their&nbsp;associated&nbsp;data.</span><span class="punctuation definition string end python"><span>&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;This&nbsp;is&nbsp;a&nbsp;separate&nbsp;class&nbsp;from&nbsp;BaseForm&nbsp;in&nbsp;order&nbsp;to&nbsp;abstract&nbsp;the&nbsp;way</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;self.fields&nbsp;is&nbsp;specified.&nbsp;This&nbsp;class&nbsp;(Form)&nbsp;is&nbsp;the&nbsp;one&nbsp;that&nbsp;does&nbsp;the</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;fancy&nbsp;metaclass&nbsp;stuff&nbsp;purely&nbsp;for&nbsp;the&nbsp;semantic&nbsp;sugar&nbsp;--&nbsp;it&nbsp;allows&nbsp;one</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;to&nbsp;define&nbsp;a&nbsp;form&nbsp;using&nbsp;declarative&nbsp;syntax.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;BaseForm&nbsp;itself&nbsp;has&nbsp;no&nbsp;way&nbsp;of&nbsp;designating&nbsp;self.fields.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function decorator python"><span class="entity name function decorator python"><span>@</span><span>python_2_unicode_compatible</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta class python"><span class="storage type class python"><span>class</span></span><span>&nbsp;</span><span class="entity name type class python"><span>BoundField</span></span><span class="punctuation definition inheritance begin python"><span>(</span></span><span class="meta class inheritance python"><span class="entity other inherited-class python"><span class="support type python"><span>object</span></span></span></span><span class="punctuation definition inheritance end python"><span>)</span></span><span class="punctuation section class begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double single-line python"><span class="punctuation definition string begin python"><span>&quot;</span></span><span>A&nbsp;Field&nbsp;plus&nbsp;data</span><span class="punctuation definition string end python"><span>&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span class="support function magic python"><span>__init__</span></span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>form</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>field</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>name</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>orm</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>form</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ield</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>field</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>n</span><span>ame</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>name</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>h</span><span>tml_name</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>form</span><span>.</span><span>add_prefix</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>name</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>h</span><span>tml_initial_name</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>form</span><span>.</span><span>add_initial_prefix</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>name</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>h</span><span>tml_initial_id</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>form</span><span>.</span><span>add_initial_prefix</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>a</span><span>uto_id</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ield</span><span>.</span><span>label</span><span>&nbsp;</span><span class="keyword operator logical python"><span>is</span></span><span>&nbsp;</span><span class="constant language python"><span>None</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>l</span><span>abel</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>pretty_name</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>name</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>l</span><span>abel</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ield</span><span>.</span><span>label</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>h</span><span>elp_text</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>field</span><span>.</span><span>help_text</span><span>&nbsp;</span><span class="keyword operator logical python"><span>or</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="punctuation definition string end python"><span class="meta empty-string single python"><span>&#39;</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>initial_value</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>UNSET</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span class="support function magic python"><span>__str__</span></span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span><span>Renders&nbsp;this&nbsp;field&nbsp;as&nbsp;an&nbsp;HTML&nbsp;widget.</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ield</span><span>.</span><span>show_hidden_initial</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>as_widget</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>+</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>as_hidden</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable parameter function python"><span>only_initial</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>True</span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>as_widget</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span class="support function magic python"><span>__iter__</span></span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Yields&nbsp;rendered&nbsp;strings&nbsp;that&nbsp;comprise&nbsp;all&nbsp;widgets&nbsp;in&nbsp;this&nbsp;BoundField.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;really&nbsp;is&nbsp;only&nbsp;useful&nbsp;for&nbsp;RadioSelect&nbsp;widgets,&nbsp;so&nbsp;that&nbsp;you&nbsp;can</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iterate&nbsp;over&nbsp;individual&nbsp;radio&nbsp;buttons&nbsp;in&nbsp;a&nbsp;template.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>id_</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>field</span><span>.</span><span>widget</span><span>.</span><span>attrs</span><span>.</span><span>get</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>id</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>or</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>a</span><span>uto_id</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>attrs</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta structure dictionary python"><span class="punctuation definition dictionary begin python"><span>{</span></span><span class="meta structure dictionary key python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>id</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span>id_</span></span><span class="punctuation definition dictionary end python"><span>}</span></span></span><span>&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>id_</span><span>&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>&nbsp;</span><span class="meta structure dictionary python"><span class="punctuation definition dictionary begin python"><span>{</span></span><span class="meta empty-dictionary python"><span class="punctuation definition dictionary end python"><span>}</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control repeat python"><span>for</span></span><span>&nbsp;</span><span>subwidget</span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>field</span><span>.</span><span>widget</span><span>.</span><span>subwidgets</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>h</span><span>tml_name</span><span>,&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>value</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>,&nbsp;</span><span>attrs</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>yield</span></span><span>&nbsp;</span><span>subwidget</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span class="support function magic python"><span>__len__</span></span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support function builtin python"><span>len</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="meta function-call python"><span class="support type python"><span>list</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span class="support function magic python"><span>__iter__</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span class="support function magic python"><span>__getitem__</span></span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>idx</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Prevent&nbsp;unnecessary&nbsp;reevaluation&nbsp;when&nbsp;accessing&nbsp;BoundField&#39;s&nbsp;attrs</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;from&nbsp;templates.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support function builtin python"><span>isinstance</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>idx</span><span>,&nbsp;</span><span>six</span><span>.</span><span>integer_types</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control exception python"><span>raise</span></span><span>&nbsp;</span><span class="support type exception python"><span>TypeError</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support type python"><span>list</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span class="support function magic python"><span>__iter__</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span class="meta item-access python"><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span>idx</span></span><span class="punctuation definition arguments end python"><span>]</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function decorator python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="entity name function decorator python"><span>@</span><span class="support function builtin python"><span>property</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>errors</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns&nbsp;an&nbsp;ErrorList&nbsp;for&nbsp;this&nbsp;field.&nbsp;Returns&nbsp;an&nbsp;empty&nbsp;ErrorList</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;there&nbsp;are&nbsp;none.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>form</span><span>.</span><span>errors</span><span>.</span><span>get</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>n</span><span>ame</span><span>,&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>form</span><span>.</span><span>error_class</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>as_widget</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>widget</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>None</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>attrs</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>None</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>only_initial</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>False</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Renders&nbsp;the&nbsp;field&nbsp;by&nbsp;rendering&nbsp;the&nbsp;passed&nbsp;widget,&nbsp;adding&nbsp;any&nbsp;HTML</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attributes&nbsp;passed&nbsp;as&nbsp;attrs.&nbsp;&nbsp;If&nbsp;no&nbsp;widget&nbsp;is&nbsp;specified,&nbsp;then&nbsp;the</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;field&#39;s&nbsp;default&nbsp;widget&nbsp;will&nbsp;be&nbsp;used.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span>widget</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>widget</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ield</span><span>.</span><span>widget</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ield</span><span>.</span><span>localize</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>widget</span><span>.</span><span>is_localized</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="constant language python"><span>True</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>attrs</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>attrs</span><span>&nbsp;</span><span class="keyword operator logical python"><span>or</span></span><span>&nbsp;</span><span class="meta structure dictionary python"><span class="punctuation definition dictionary begin python"><span>{</span></span><span class="meta empty-dictionary python"><span class="punctuation definition dictionary end python"><span>}</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>auto_id</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>a</span><span>uto_id</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>auto_id</span><span>&nbsp;</span><span class="keyword operator logical python"><span>and</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>id</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span>attrs</span><span>&nbsp;</span><span class="keyword operator logical python"><span>and</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>id</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span>widget</span><span>.</span><span>attrs</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span>only_initial</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta item-access python"><span>attrs</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>id</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>]</span></span></span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>auto_id</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta item-access python"><span>attrs</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>id</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>]</span></span></span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>h</span><span>tml_initial_id</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span>only_initial</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>name</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>h</span><span>tml_name</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>name</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>h</span><span>tml_initial_name</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span>force_text</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="meta function-call python"><span>widget</span><span>.</span><span>render</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>name</span><span>,&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>value</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>,&nbsp;</span><span class="variable parameter function python"><span>attrs</span></span><span class="keyword operator assignment python"><span>=</span></span><span>attrs</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>as_text</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>attrs</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>None</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;**</span><span class="variable parameter function python"><span>kwargs</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns&nbsp;a&nbsp;string&nbsp;of&nbsp;HTML&nbsp;for&nbsp;representing&nbsp;this&nbsp;as&nbsp;an&nbsp;&lt;input&nbsp;type=&quot;text&quot;&gt;.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>as_widget</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="meta function-call python"><span>TextInput</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>,&nbsp;</span><span>attrs</span><span>,&nbsp;</span><span class="keyword operator arithmetic python"><span>*</span><span>*</span></span><span>kwargs</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>as_textarea</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>attrs</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>None</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;**</span><span class="variable parameter function python"><span>kwargs</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double single-line python"><span class="punctuation definition string begin python"><span>&quot;</span></span><span>Returns&nbsp;a&nbsp;string&nbsp;of&nbsp;HTML&nbsp;for&nbsp;representing&nbsp;this&nbsp;as&nbsp;a&nbsp;&lt;textarea&gt;.</span><span class="punctuation definition string end python"><span>&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>as_widget</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="meta function-call python"><span>Textarea</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>,&nbsp;</span><span>attrs</span><span>,&nbsp;</span><span class="keyword operator arithmetic python"><span>*</span><span>*</span></span><span>kwargs</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>as_hidden</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>attrs</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>None</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;**</span><span class="variable parameter function python"><span>kwargs</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns&nbsp;a&nbsp;string&nbsp;of&nbsp;HTML&nbsp;for&nbsp;representing&nbsp;this&nbsp;as&nbsp;an&nbsp;&lt;input&nbsp;type=&quot;hidden&quot;&gt;.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>as_widget</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>field</span><span>.</span><span>hidden_widget</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>,&nbsp;</span><span>attrs</span><span>,&nbsp;</span><span class="keyword operator arithmetic python"><span>*</span><span>*</span></span><span>kwargs</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function decorator python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="entity name function decorator python"><span>@</span><span class="support function builtin python"><span>property</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>data</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns&nbsp;the&nbsp;data&nbsp;for&nbsp;this&nbsp;BoundField,&nbsp;or&nbsp;None&nbsp;if&nbsp;it&nbsp;wasn&#39;t&nbsp;given.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>field</span><span>.</span><span>widget</span><span>.</span><span>value_from_datadict</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>orm</span><span>.</span><span>data</span><span>,&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>orm</span><span>.</span><span>files</span><span>,&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>h</span><span>tml_name</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>value</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns&nbsp;the&nbsp;value&nbsp;for&nbsp;this&nbsp;BoundField,&nbsp;using&nbsp;the&nbsp;initial&nbsp;value&nbsp;if</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the&nbsp;form&nbsp;is&nbsp;not&nbsp;bound&nbsp;or&nbsp;the&nbsp;data&nbsp;otherwise.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>orm</span><span>.</span><span>is_bound</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>data</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>form</span><span>.</span><span>initial</span><span>.</span><span>get</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>n</span><span>ame</span><span>,&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ield</span><span>.</span><span>initial</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support function builtin python"><span>callable</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>data</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>initial_value</span><span>&nbsp;</span><span class="keyword operator logical python"><span>is</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span>UNSET</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>data</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>initial_value</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>data</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>data</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;If&nbsp;this&nbsp;is&nbsp;an&nbsp;auto-generated&nbsp;default&nbsp;date,&nbsp;nix&nbsp;the</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;microseconds&nbsp;for&nbsp;standardized&nbsp;handling.&nbsp;See&nbsp;#22502.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>(</span><span class="meta function-call python"><span class="support function builtin python"><span>isinstance</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>data</span><span>,&nbsp;</span><span>(</span><span>datetime</span><span>.</span><span>datetime</span><span>,&nbsp;</span><span>datetime</span><span>.</span><span>time</span><span>)</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>and</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support function builtin python"><span>getattr</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ield</span><span>.</span><span>widget</span><span>,&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>supports_microseconds</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>,&nbsp;</span><span class="constant language python"><span>True</span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>)</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>data</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>data</span><span>.</span><span>replace</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable parameter function python"><span>microsecond</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant numeric integer decimal python"><span>0</span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>_</span><span>initial_value</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>data</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>data</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>field</span><span>.</span><span>bound_data</span><span class="punctuation definition arguments begin python"><span>(</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>d</span><span>ata</span><span>,&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>form</span><span>.</span><span>initial</span><span>.</span><span>get</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>n</span><span>ame</span><span>,&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ield</span><span>.</span><span>initial</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function-call python"><span class="meta function-call arguments python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="variable language python"><span>self</span></span><span>.</span><span>field</span><span>.</span><span>prepare_value</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>data</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>label_tag</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>contents</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>None</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>attrs</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>None</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>label_suffix</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>None</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Wraps&nbsp;the&nbsp;given&nbsp;contents&nbsp;in&nbsp;a&nbsp;&lt;label&gt;,&nbsp;if&nbsp;the&nbsp;field&nbsp;has&nbsp;an&nbsp;ID&nbsp;attribute.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contents&nbsp;should&nbsp;be&nbsp;&#39;mark_safe&#39;d&nbsp;to&nbsp;avoid&nbsp;HTML&nbsp;escaping.&nbsp;If&nbsp;contents</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aren&#39;t&nbsp;given,&nbsp;uses&nbsp;the&nbsp;field&#39;s&nbsp;HTML-escaped&nbsp;label.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;attrs&nbsp;are&nbsp;given,&nbsp;they&#39;re&nbsp;used&nbsp;as&nbsp;HTML&nbsp;attributes&nbsp;on&nbsp;the&nbsp;&lt;label&gt;&nbsp;tag.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label_suffix&nbsp;allows&nbsp;overriding&nbsp;the&nbsp;form&#39;s&nbsp;label_suffix.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>contents</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>contents</span><span>&nbsp;</span><span class="keyword operator logical python"><span>or</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>l</span><span>abel</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>label_suffix</span><span>&nbsp;</span><span class="keyword operator logical python"><span>is</span></span><span>&nbsp;</span><span class="constant language python"><span>None</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>label_suffix</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>(</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ield</span><span>.</span><span>label_suffix</span><span>&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ield</span><span>.</span><span>label_suffix</span><span>&nbsp;</span><span class="keyword operator logical python"><span>is</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="constant language python"><span>None</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>orm</span><span>.</span><span>label_suffix</span><span>)</span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Only&nbsp;add&nbsp;the&nbsp;suffix&nbsp;if&nbsp;the&nbsp;label&nbsp;does&nbsp;not&nbsp;end&nbsp;in&nbsp;punctuation.</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;Translators:&nbsp;If&nbsp;found&nbsp;as&nbsp;last&nbsp;label&nbsp;character,&nbsp;these&nbsp;punctuation</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span class="punctuation whitespace comment leading python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line number-sign python"><span class="punctuation definition comment python"><span>#</span></span><span>&nbsp;characters&nbsp;will&nbsp;prevent&nbsp;the&nbsp;default&nbsp;label_suffix&nbsp;to&nbsp;be&nbsp;appended&nbsp;to&nbsp;the&nbsp;label</span><span>&nbsp;</span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>label_suffix</span><span>&nbsp;</span><span class="keyword operator logical python"><span>and</span></span><span>&nbsp;</span><span>contents</span><span>&nbsp;</span><span class="keyword operator logical python"><span>and</span></span><span>&nbsp;</span><span class="meta item-access python"><span>contents</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span class="keyword operator arithmetic python"><span>-</span></span><span class="constant numeric integer decimal python"><span>1</span></span></span><span class="punctuation definition arguments end python"><span>]</span></span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>not</span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="meta function-call python"><span>_</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>:?.!</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>contents</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>format_html</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="constant other placeholder python"><span>{}</span><span>{}</span></span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>,&nbsp;</span><span>contents</span><span>,&nbsp;</span><span>label_suffix</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>widget</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ield</span><span>.</span><span>widget</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>id_</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>widget</span><span>.</span><span>attrs</span><span>.</span><span>get</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>id</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>or</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>a</span><span>uto_id</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>id_</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>id_for_label</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>widget</span><span>.</span><span>id_for_label</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>id_</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>id_for_label</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>attrs</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support type python"><span>dict</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>attrs</span><span>&nbsp;</span><span class="keyword operator logical python"><span>or</span></span><span>&nbsp;</span><span class="meta structure dictionary python"><span class="punctuation definition dictionary begin python"><span>{</span></span><span class="meta empty-dictionary python"><span class="punctuation definition dictionary end python"><span>}</span></span></span></span><span>,&nbsp;</span><span class="keyword operator arithmetic python"><span>*</span><span>*</span></span><span class="meta structure dictionary python"><span class="punctuation definition dictionary begin python"><span>{</span></span><span class="meta structure dictionary key python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>for</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation separator valuepair dictionary python"><span>:</span></span><span>&nbsp;</span><span class="meta structure dictionary value python"><span>id_for_label</span></span><span class="punctuation definition dictionary end python"><span>}</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ield</span><span>.</span><span>required</span><span>&nbsp;</span><span class="keyword operator logical python"><span>and</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support function builtin python"><span>hasattr</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>orm</span><span>,&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>required_css_class</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>attrs</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span>attrs</span><span>&nbsp;</span><span class="keyword operator logical python"><span>or</span></span><span>&nbsp;</span><span class="meta structure dictionary python"><span class="punctuation definition dictionary begin python"><span>{</span></span><span class="meta empty-dictionary python"><span class="punctuation definition dictionary end python"><span>}</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>class</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span>attrs</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta item-access python"><span>attrs</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>class</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>]</span></span></span><span>&nbsp;</span><span class="keyword operator assignment augmented python"><span>+=</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>&nbsp;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>+</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>orm</span><span>.</span><span>required_css_class</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta item-access python"><span>attrs</span><span class="punctuation definition arguments begin python"><span>[</span></span><span class="meta item-access arguments python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>class</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>]</span></span></span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>orm</span><span>.</span><span>required_css_class</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>attrs</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>flatatt</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>attrs</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>attrs</span><span>&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="punctuation definition string end python"><span class="meta empty-string single python"><span>&#39;</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>contents</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>format_html</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>&lt;label</span><span class="constant other placeholder python"><span>{}</span></span><span>&gt;</span><span class="constant other placeholder python"><span>{}</span></span><span>&lt;/label&gt;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>,&nbsp;</span><span>attrs</span><span>,&nbsp;</span><span>contents</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>else</span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>contents</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>conditional_escape</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>contents</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span>mark_safe</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>contents</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>css_classes</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span><span class="punctuation separator parameters python"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function python"><span>extra_classes</span></span><span class="keyword operator assignment python"><span>=</span></span><span class="constant language python"><span>None</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns&nbsp;a&nbsp;string&nbsp;of&nbsp;space-separated&nbsp;CSS&nbsp;classes&nbsp;for&nbsp;this&nbsp;field.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support function builtin python"><span>hasattr</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>extra_classes</span><span>,&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>split</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>extra_classes</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>extra_classes</span><span>.</span><span>split</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>extra_classes</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support type python"><span>set</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>extra_classes</span><span>&nbsp;</span><span class="keyword operator logical python"><span>or</span></span><span>&nbsp;</span><span class="meta structure list python"><span class="punctuation definition list begin python"><span>[</span></span><span class="punctuation definition list end python"><span>]</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>e</span><span>rrors</span><span>&nbsp;</span><span class="keyword operator logical python"><span>and</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support function builtin python"><span>hasattr</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>orm</span><span>,&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>error_css_class</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span>extra_classes</span><span>.</span><span>add</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>orm</span><span>.</span><span>error_css_class</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ield</span><span>.</span><span>required</span><span>&nbsp;</span><span class="keyword operator logical python"><span>and</span></span><span>&nbsp;</span><span class="meta function-call python"><span class="support function builtin python"><span>hasattr</span></span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>orm</span><span>,&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>required_css_class</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function-call python"><span>extra_classes</span><span>.</span><span>add</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>orm</span><span>.</span><span>required_css_class</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>&nbsp;</span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>.</span><span class="meta function-call python"><span>j</span><span>oin</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>extra_classes</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function decorator python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="entity name function decorator python"><span>@</span><span class="support function builtin python"><span>property</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>is_hidden</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double single-line python"><span class="punctuation definition string begin python"><span>&quot;</span></span><span>Returns&nbsp;True&nbsp;if&nbsp;this&nbsp;BoundField&#39;s&nbsp;widget&nbsp;is&nbsp;hidden.</span><span class="punctuation definition string end python"><span>&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ield</span><span>.</span><span>widget</span><span>.</span><span>is_hidden</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function decorator python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="entity name function decorator python"><span>@</span><span class="support function builtin python"><span>property</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>auto_id</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Calculates&nbsp;and&nbsp;returns&nbsp;the&nbsp;ID&nbsp;attribute&nbsp;for&nbsp;this&nbsp;BoundField,&nbsp;if&nbsp;the</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;associated&nbsp;Form&nbsp;has&nbsp;specified&nbsp;auto_id.&nbsp;Returns&nbsp;an&nbsp;empty&nbsp;string&nbsp;otherwise.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>auto_id</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>orm</span><span>.</span><span>auto_id</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>if</span></span><span>&nbsp;</span><span>auto_id</span><span>&nbsp;</span><span class="keyword operator logical python"><span>and</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="constant other placeholder python"><span>%s</span></span><span class="punctuation definition string end python"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>in</span></span><span>&nbsp;</span><span class="meta function-call python"><span>smart_text</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>auto_id</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span>smart_text</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>auto_id</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>&nbsp;</span><span class="keyword operator arithmetic python"><span>%</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>h</span><span>tml_name</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control conditional python"><span>elif</span></span><span>&nbsp;</span><span>auto_id</span><span>:</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>h</span><span>tml_name</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span class="punctuation definition string end python"><span class="meta empty-string single python"><span>&#39;</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;</span></span></div>
  <div class="line"><span class="source python"><span class="meta function decorator python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="entity name function decorator python"><span>@</span><span class="support function builtin python"><span>property</span></span></span></span></span></div>
  <div class="line"><span class="source python"><span class="meta function python"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type function python"><span>def</span></span><span>&nbsp;</span><span class="entity name function python"><span>id_for_label</span></span><span class="punctuation definition parameters begin python"><span>(</span></span><span class="meta function parameters python"><span class="variable parameter function python"><span>self</span></span></span><span class="punctuation definition parameters end python"><span>)</span></span><span class="punctuation section function begin python"><span>:</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="string quoted double block python"><span class="punctuation definition string begin python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Wrapper&nbsp;around&nbsp;the&nbsp;field&nbsp;widget&#39;s&nbsp;`id_for_label`&nbsp;method.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Useful,&nbsp;for&nbsp;example,&nbsp;for&nbsp;focusing&nbsp;on&nbsp;this&nbsp;field&nbsp;regardless&nbsp;of&nbsp;whether</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it&nbsp;has&nbsp;a&nbsp;single&nbsp;widget&nbsp;or&nbsp;a&nbsp;MultiWidget.</span></span></span></div>
  <div class="line"><span class="source python"><span class="string quoted double block python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition string end python"><span>&quot;&quot;&quot;</span></span></span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>widget</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>f</span><span>ield</span><span>.</span><span>widget</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span>id_</span><span>&nbsp;</span><span class="keyword operator assignment python"><span>=</span></span><span>&nbsp;</span><span class="meta function-call python"><span>widget</span><span>.</span><span>attrs</span><span>.</span><span>get</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span class="string quoted single single-line python"><span class="punctuation definition string begin python"><span>&#39;</span></span><span>id</span><span class="punctuation definition string end python"><span>&#39;</span></span></span></span><span class="punctuation definition arguments end python"><span>)</span></span></span><span>&nbsp;</span><span class="keyword operator logical python"><span>or</span></span><span>&nbsp;</span><span class="variable language python"><span>self</span></span><span>.</span><span>a</span><span>uto_id</span></span></div>
  <div class="line"><span class="source python"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control statement python"><span>return</span></span><span>&nbsp;</span><span class="meta function-call python"><span>widget</span><span>.</span><span>id_for_label</span><span class="punctuation definition arguments begin python"><span>(</span></span><span class="meta function-call arguments python"><span>id_</span></span><span class="punctuation definition arguments end python"><span>)</span></span></span></span></div></div>

</body>

</html>
